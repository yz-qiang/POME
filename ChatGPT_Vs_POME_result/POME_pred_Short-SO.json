[
  {
    "lib_name": "android",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity",
    "boolean": 1,
    "context": "public class ad1 { public static void hideKeyboard(<mask><mask><mask>.Activity activity) { InputMethodManager imm = ((InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));android View view = getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "sun.awt.im",
    "truth_type": "sun.awt.im",
    "full_FQN": "sun.awt.im.InputMethodManager",
    "boolean": 1,
    "context": "public class ad1 { public static void hideKeyboard(Activity activity) { <mask><mask><mask><mask><mask><mask>.InputMethodManager imm = ((InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));android View view = getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "sun.awt.im",
    "truth_type": "sun.awt.im",
    "full_FQN": "sun.awt.im.InputMethodManager",
    "boolean": 1,
    "context": "public class ad1 { public static void hideKeyboard(Activity activity) { InputMethodManager imm = ((<mask><mask><mask><mask><mask><mask>.InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));android View view = getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity.getSystemService()",
    "boolean": 1,
    "context": "public class ad1 { public static void hideKeyboard(Activity activity) { InputMethodManager imm = ((InputMethodManager)  <mask><mask><mask>getSystemService(INPUT_METHOD_SERVICE)));android View view = getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.System",
    "truth_type": "android.app.Activity",
    "full_FQN": "android.app.Activity.INPUT_METHOD_SERVICE",
    "boolean": 0,
    "context": "public class ad1 { public static void hideKeyboard(Activity activity) { InputMethodManager imm = ((InputMethodManager)  getSystemService(<mask><mask><mask><mask><mask>.INPUT_METHOD_SERVICE)));android View view = getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.View",
    "truth_type": "android.view.View",
    "full_FQN": "android.view.View.View",
    "boolean": 1,
    "context": "public class ad1 { public static void hideKeyboard(Activity activity) { InputMethodManager imm = ((InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));android <mask><mask><mask><mask><mask>.View view = getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity.getCurrentFocus()",
    "boolean": 1,
    "context": "public class ad1 { public static void hideKeyboard(Activity activity) { InputMethodManager imm = ((InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));android View view = <mask><mask><mask>getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.graphics",
    "truth_type": "android.graphics",
    "full_FQN": "android.graphics.Bitmap",
    "boolean": 1,
    "context": "public class ad10 { public <mask><mask><mask><mask>.Bitmap screenShot(android View view) { Bitmap bitmap = createBitmap getWidth(), getHeight(), ARGB_8888);Canvas canvas = new Canvas(bitmap); android draw(canvas);"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.View",
    "truth_type": "android.view.View",
    "full_FQN": "android.view.View.View",
    "boolean": 1,
    "context": "public class ad10 { public Bitmap screenShot(android <mask><mask><mask><mask><mask>.View view) { Bitmap bitmap = createBitmap getWidth(), getHeight(), ARGB_8888);Canvas canvas = new Canvas(bitmap); android draw(canvas);"
  },
  {
    "lib_name": "android",
    "pred_type": "android.graphics",
    "truth_type": "android.graphics",
    "full_FQN": "android.graphics.Bitmap",
    "boolean": 1,
    "context": "public class ad10 { public Bitmap screenShot(android View view) { <mask><mask><mask><mask>.Bitmap bitmap = createBitmap getWidth(), getHeight(), ARGB_8888);Canvas canvas = new Canvas(bitmap); android draw(canvas);"
  },
  {
    "lib_name": "android",
    "pred_type": "android.graphics.Bitmap",
    "truth_type": "android.graphics.Bitmap",
    "full_FQN": "android.graphics.Bitmap.createBitmap",
    "boolean": 1,
    "context": "public class ad10 { public Bitmap screenShot(android View view) { Bitmap bitmap = <mask><mask><mask><mask><mask><mask><mask>.createBitmap getWidth(), getHeight(), ARGB_8888);Canvas canvas = new Canvas(bitmap); android draw(canvas);"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view",
    "truth_type": "android.view",
    "full_FQN": "android.view.View.getWidth()",
    "boolean": 1,
    "context": "public class ad10 { public Bitmap screenShot(android View view) { Bitmap bitmap = createBitmap <mask><mask><mask>getWidth(), getHeight(), ARGB_8888);Canvas canvas = new Canvas(bitmap); android draw(canvas);"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view",
    "truth_type": "android.view",
    "full_FQN": "android.view.View.getHeight()",
    "boolean": 1,
    "context": "public class ad10 { public Bitmap screenShot(android View view) { Bitmap bitmap = createBitmap getWidth(), <mask><mask><mask>getHeight(), ARGB_8888);Canvas canvas = new Canvas(bitmap); android draw(canvas);"
  },
  {
    "lib_name": "android",
    "pred_type": "Bitmap.Config",
    "truth_type": "Bitmap.Config",
    "full_FQN": "Bitmap.Config.ARGB_8888",
    "boolean": 1,
    "context": "public class ad10 { public Bitmap screenShot(android View view) { Bitmap bitmap = createBitmap getWidth(), getHeight(), <mask><mask><mask><mask>.ARGB_8888);Canvas canvas = new Canvas(bitmap); android draw(canvas);"
  },
  {
    "lib_name": "android",
    "pred_type": "android.graphics",
    "truth_type": "android.graphics",
    "full_FQN": "android.graphics.Canvas",
    "boolean": 1,
    "context": "public class ad10 { public Bitmap screenShot(android View view) { Bitmap bitmap = createBitmap getWidth(), getHeight(), ARGB_8888);<mask><mask><mask><mask>.Canvas canvas = new Canvas(bitmap); android draw(canvas);return bitmap;"
  },
  {
    "lib_name": "android",
    "pred_type": "android.graphics",
    "truth_type": "android.graphics",
    "full_FQN": "android.graphics.Canvas()",
    "boolean": 1,
    "context": "public class ad10 { public Bitmap screenShot(android View view) { Bitmap bitmap = createBitmap getWidth(), getHeight(), ARGB_8888);Canvas canvas = new <mask><mask><mask><mask>.Canvas(bitmap); android draw(canvas);return bitmap;"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.View",
    "truth_type": "android.view.View",
    "full_FQN": "android.view.View.View.draw()",
    "boolean": 1,
    "context": "public class ad10 { public Bitmap screenShot(android View view) { Bitmap bitmap = createBitmap getWidth(), getHeight(), ARGB_8888);Canvas canvas = new Canvas(bitmap); android <mask><mask><mask><mask><mask>draw(canvas);return bitmap;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity",
    "boolean": 1,
    "context": "public class ad12 { public static void hideKeyboardFrom() { <mask><mask><mask>.Activity activity = null;Resources resources = getResources();Configuration config = getConfiguration();"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content.res",
    "truth_type": "android.content.res",
    "full_FQN": "android.content.res.Resources",
    "boolean": 1,
    "context": "public class ad12 { public static void hideKeyboardFrom() { Activity activity = null;<mask><mask><mask><mask><mask>.Resources resources = getResources();Configuration config = getConfiguration();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity.getResources()",
    "boolean": 0,
    "context": "public class ad12 { public static void hideKeyboardFrom() { Activity activity = null;Resources resources = <mask><mask><mask>getResources();Configuration config = getConfiguration();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content.res",
    "truth_type": "android.content.res",
    "full_FQN": "android.content.res.Configuration",
    "boolean": 1,
    "context": "public class ad12 { public static void hideKeyboardFrom() { Activity activity = null;Resources resources = getResources();<mask><mask><mask><mask><mask>.Configuration config = getConfiguration();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content.res",
    "truth_type": "android.content.res",
    "full_FQN": "android.content.res.Resources.getConfiguration()",
    "boolean": 1,
    "context": "public class ad12 { public static void hideKeyboardFrom() { Activity activity = null;Resources resources = getResources();Configuration config = <mask><mask><mask><mask><mask>getConfiguration();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.View",
    "truth_type": "android.view.View",
    "full_FQN": "android.view.View.View",
    "boolean": 1,
    "context": "public class ad13 { public void onClick(android <mask><mask><mask><mask><mask>.View view) { ((android InputMethodManager) (getSystemService(INPUT_METHOD_SERVICE))).toggleSoftInput(android SHOW_IMPLICIT, 0);} private Object getSystemService(String inputMethodService) { return null;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.View.inputmethod",
    "truth_type": "android.view.View.inputmethod",
    "full_FQN": "android.view.View.inputmethod.InputMethodManager",
    "boolean": 1,
    "context": "public class ad13 { public void onClick(android View view) { ((android <mask><mask><mask><mask><mask><mask><mask><mask>.InputMethodManager) (getSystemService(INPUT_METHOD_SERVICE))).toggleSoftInput(android SHOW_IMPLICIT, 0);} private Object getSystemService(String inputMethodService) { return null;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.Service",
    "truth_type": "android.app.Activity",
    "full_FQN": "android.app.Activity.INPUT_METHOD_SERVICE",
    "boolean": 0,
    "context": "public class ad13 { public void onClick(android View view) { ((android InputMethodManager) (getSystemService(<mask><mask><mask><mask><mask>.INPUT_METHOD_SERVICE))).toggleSoftInput(android SHOW_IMPLICIT, 0);} private Object getSystemService(String inputMethodService) { return null;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.View.inputmethod.LayoutUtManager",
    "truth_type": "android.view.View.inputmethod.InputMethodManager",
    "full_FQN": "android.view.View.inputmethod.InputMethodManager.SHOW_IMPLICIT",
    "boolean": 0,
    "context": "public class ad13 { public void onClick(android View view) { ((android InputMethodManager) (getSystemService(INPUT_METHOD_SERVICE))).toggleSoftInput(android <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.SHOW_IMPLICIT, 0);} private Object getSystemService(String inputMethodService) { return null;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.inputmethod",
    "truth_type": "android.view.inputmethod",
    "full_FQN": "android.view.inputmethod.InputMethodManager",
    "boolean": 1,
    "context": "public class ad14 { public static void h1() { <mask><mask><mask><mask><mask><mask>.InputMethodManager imm = ((InputMethodManager) (getSystemService(INPUT_METHOD_SERVICE))); toggleSoftInput(SHOW_IMPLICIT, 0);} private static Object getSystemService(String inputMethodService) { return null;"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.inputmethod",
    "truth_type": "android.view.inputmethod",
    "full_FQN": "android.view.inputmethod.InputMethodManager",
    "boolean": 1,
    "context": "public class ad14 { public static void h1() { InputMethodManager imm = ((<mask><mask><mask><mask><mask><mask>.InputMethodManager) (getSystemService(INPUT_METHOD_SERVICE))); toggleSoftInput(SHOW_IMPLICIT, 0);} private static Object getSystemService(String inputMethodService) { return null;"
  },
  {
    "lib_name": "android",
    "pred_type": "com.android..Pre.System",
    "truth_type": "android.view.inputmethod.Activity",
    "full_FQN": "android.view.inputmethod.Activity.INPUT_METHOD_SERVICE",
    "boolean": 0,
    "context": "public class ad14 { public static void h1() { InputMethodManager imm = ((InputMethodManager) (getSystemService(<mask><mask><mask><mask><mask><mask><mask><mask>.INPUT_METHOD_SERVICE))); toggleSoftInput(SHOW_IMPLICIT, 0);} private static Object getSystemService(String inputMethodService) { return null;"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.inputmethod",
    "truth_type": "android.view.inputmethod",
    "full_FQN": "android.view.inputmethod.InputMethodManager.toggleSoftInput()",
    "boolean": 1,
    "context": "public class ad14 { public static void h1() { InputMethodManager imm = ((InputMethodManager) (getSystemService(INPUT_METHOD_SERVICE))); <mask><mask><mask><mask><mask><mask>toggleSoftInput(SHOW_IMPLICIT, 0);} private static Object getSystemService(String inputMethodService) { return null;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity",
    "boolean": 1,
    "context": "public class ad15 extends <mask><mask><mask>.Activity { private TextView mTextView = null;public void h1(Bundle savedInstanceState) { mTextView = new TextView(this);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.widget",
    "truth_type": "android.widget",
    "full_FQN": "android.widget.TextView",
    "boolean": 1,
    "context": "public class ad15 extends Activity { private <mask><mask><mask>.TextView mTextView = null;public void h1(Bundle savedInstanceState) { mTextView = new TextView(this);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "java.util",
    "truth_type": "android.os",
    "full_FQN": "android.os.Bundle",
    "boolean": 0,
    "context": "public class ad15 extends Activity { private TextView mTextView = null;public void h1(<mask><mask><mask>.Bundle savedInstanceState) { mTextView = new TextView(this);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.widget",
    "truth_type": "android.widget",
    "full_FQN": "android.widget.TextView()",
    "boolean": 1,
    "context": "public class ad15 extends Activity { private TextView mTextView = null;public void h1(Bundle savedInstanceState) { mTextView = new <mask><mask><mask>.TextView(this);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity",
    "boolean": 1,
    "context": "public class ad16 { private void hideKeyboard(<mask><mask><mask>.Activity activity) { if ((activity != null) &&  getWindow() != null)) { InputMethodManager imm = ((InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));} } };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity.getWindow()",
    "boolean": 1,
    "context": "public class ad16 { private void hideKeyboard(Activity activity) { if ((activity != null) &&  <mask><mask><mask>getWindow() != null)) { InputMethodManager imm = ((InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));} } };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.inputmethod",
    "truth_type": "android.view.inputmethod",
    "full_FQN": "android.view.inputmethod.InputMethodManager",
    "boolean": 1,
    "context": "public class ad16 { private void hideKeyboard(Activity activity) { if ((activity != null) &&  getWindow() != null)) { <mask><mask><mask><mask><mask><mask>.InputMethodManager imm = ((InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));} } };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.inputmethod",
    "truth_type": "android.view.inputmethod",
    "full_FQN": "android.view.inputmethod.InputMethodManager",
    "boolean": 1,
    "context": "public class ad16 { private void hideKeyboard(Activity activity) { if ((activity != null) &&  getWindow() != null)) { InputMethodManager imm = ((<mask><mask><mask><mask><mask><mask>.InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));} } };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity.getSystemService()",
    "boolean": 1,
    "context": "public class ad16 { private void hideKeyboard(Activity activity) { if ((activity != null) &&  getWindow() != null)) { InputMethodManager imm = ((InputMethodManager)  <mask><mask><mask>getSystemService(INPUT_METHOD_SERVICE)));} } };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.Table",
    "truth_type": "android.content.Context",
    "full_FQN": "android.content.Context.INPUT_METHOD_SERVICE",
    "boolean": 0,
    "context": "public class ad16 { private void hideKeyboard(Activity activity) { if ((activity != null) &&  getWindow() != null)) { InputMethodManager imm = ((InputMethodManager)  getSystemService(<mask><mask><mask><mask><mask>.INPUT_METHOD_SERVICE)));} } };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.widget",
    "truth_type": "android.widget",
    "full_FQN": "android.widget.TextView",
    "boolean": 1,
    "context": "public class ad17 { <mask><mask><mask>.TextView tv = new TextView(getContext());private Context getContext() { return null;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.widget",
    "truth_type": "android.widget",
    "full_FQN": "android.widget.TextView()",
    "boolean": 1,
    "context": "public class ad17 { TextView tv = new <mask><mask><mask>.TextView(getContext());private Context getContext() { return null;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content",
    "truth_type": "android.content",
    "full_FQN": "android.content.Context",
    "boolean": 1,
    "context": "public class ad17 { TextView tv = new TextView(getContext());private <mask><mask><mask>.Context getContext() { return null;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content",
    "truth_type": "android.content",
    "full_FQN": "android.content.Intent",
    "boolean": 1,
    "context": "public class ad18 { public static void h1() { String url = String;<mask><mask><mask>.Intent i = new Intent(ACTION_VIEW);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content",
    "truth_type": "android.content",
    "full_FQN": "android.content.Intent()",
    "boolean": 1,
    "context": "public class ad18 { public static void h1() { String url = String;Intent i = new <mask><mask><mask>.Intent(ACTION_VIEW);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content.Intent",
    "truth_type": "android.content.Intent",
    "full_FQN": "android.content.Intent.ACTION_VIEW",
    "boolean": 1,
    "context": "public class ad18 { public static void h1() { String url = String;Intent i = new Intent(<mask><mask><mask><mask><mask><mask>.ACTION_VIEW);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "java.util",
    "truth_type": "android.os",
    "full_FQN": "android.os.Bundle",
    "boolean": 0,
    "context": "public class ad19 { public static void h1() { <mask><mask><mask>.Bundle extras = getIntent().getExtras();if (extras != null) { String value = getString(String);} } private static Intent getIntent() { return null;"
  },
  {
    "lib_name": "android",
    "pred_type": "java.os",
    "truth_type": "android.os",
    "full_FQN": "android.os.Bundle.getString()",
    "boolean": 0,
    "context": "public class ad19 { public static void h1() { Bundle extras = getIntent().getExtras();if (extras != null) { String value = <mask><mask><mask>getString(String);} } private static Intent getIntent() { return null;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content",
    "truth_type": "android.content",
    "full_FQN": "android.content.Intent",
    "boolean": 1,
    "context": "public class ad19 { public static void h1() { Bundle extras = getIntent().getExtras();if (extras != null) { String value = getString(String);} } private static <mask><mask><mask>.Intent getIntent() { return null;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity",
    "boolean": 1,
    "context": "public class ad2 { public static void hideKeyboard(<mask><mask><mask>.Activity activity) { android InputMethodManager imm = ((android InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));android View view = getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.View.inputmethod",
    "truth_type": "android.view.View.inputmethod",
    "full_FQN": "android.view.View.inputmethod.InputMethodManager",
    "boolean": 1,
    "context": "public class ad2 { public static void hideKeyboard(Activity activity) { android <mask><mask><mask><mask><mask><mask><mask><mask>.InputMethodManager imm = ((android InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));android View view = getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.View.inputmethod",
    "truth_type": "android.view.View.inputmethod",
    "full_FQN": "android.view.View.inputmethod.InputMethodManager",
    "boolean": 1,
    "context": "public class ad2 { public static void hideKeyboard(Activity activity) { android InputMethodManager imm = ((android <mask><mask><mask><mask><mask><mask><mask><mask>.InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));android View view = getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity.getSystemService()",
    "boolean": 0,
    "context": "public class ad2 { public static void hideKeyboard(Activity activity) { android InputMethodManager imm = ((android InputMethodManager)  <mask><mask><mask>getSystemService(INPUT_METHOD_SERVICE)));android View view = getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.Table",
    "truth_type": "android.app.Activity",
    "full_FQN": "android.app.Activity.INPUT_METHOD_SERVICE",
    "boolean": 0,
    "context": "public class ad2 { public static void hideKeyboard(Activity activity) { android InputMethodManager imm = ((android InputMethodManager)  getSystemService(<mask><mask><mask><mask><mask>.INPUT_METHOD_SERVICE)));android View view = getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.View",
    "truth_type": "android.view.View",
    "full_FQN": "android.view.View.View",
    "boolean": 1,
    "context": "public class ad2 { public static void hideKeyboard(Activity activity) { android InputMethodManager imm = ((android InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));android <mask><mask><mask><mask><mask>.View view = getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity.getCurrentFocus()",
    "boolean": 1,
    "context": "public class ad2 { public static void hideKeyboard(Activity activity) { android InputMethodManager imm = ((android InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE)));android View view = <mask><mask><mask>getCurrentFocus();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat()",
    "boolean": 1,
    "context": "public class ad20 { public static void h1() { String currentDate = new <mask><mask><mask>.SimpleDateFormat(String, getDefault()).format(new Date());Instant instant = now();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Locale.getDefault()",
    "boolean": 1,
    "context": "public class ad20 { public static void h1() { String currentDate = new SimpleDateFormat(String, <mask><mask><mask>getDefault()).format(new Date());Instant instant = now();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date()",
    "boolean": 1,
    "context": "public class ad20 { public static void h1() { String currentDate = new SimpleDateFormat(String, getDefault()).format(new <mask><mask><mask>.Date());Instant instant = now();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Instant",
    "boolean": 1,
    "context": "public class ad20 { public static void h1() { String currentDate = new SimpleDateFormat(String, getDefault()).format(new Date());<mask><mask><mask><mask><mask><mask>.Instant instant = now();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Instant.now()",
    "boolean": 1,
    "context": "public class ad20 { public static void h1() { String currentDate = new SimpleDateFormat(String, getDefault()).format(new Date());Instant instant = <mask><mask><mask><mask><mask><mask>now();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content",
    "truth_type": "android.content",
    "full_FQN": "android.content.Intent",
    "boolean": 1,
    "context": "public class ad3 { public void h1() { String url = String;<mask><mask><mask>.Intent i = new Intent(ACTION_VIEW); setData(parse(url));} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content",
    "truth_type": "android.content",
    "full_FQN": "android.content.Intent()",
    "boolean": 1,
    "context": "public class ad3 { public void h1() { String url = String;Intent i = new <mask><mask><mask>.Intent(ACTION_VIEW); setData(parse(url));} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content.Intent",
    "truth_type": "android.content.Intent",
    "full_FQN": "android.content.Intent.ACTION_VIEW",
    "boolean": 1,
    "context": "public class ad3 { public void h1() { String url = String;Intent i = new Intent(<mask><mask><mask><mask><mask><mask>.ACTION_VIEW); setData(parse(url));} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content",
    "truth_type": "android.content",
    "full_FQN": "android.content.Intent.setData()",
    "boolean": 1,
    "context": "public class ad3 { public void h1() { String url = String;Intent i = new Intent(ACTION_VIEW); <mask><mask><mask>setData(parse(url));} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.net",
    "truth_type": "android.net",
    "full_FQN": "android.net.Uri.parse()",
    "boolean": 1,
    "context": "public class ad3 { public void h1() { String url = String;Intent i = new Intent(ACTION_VIEW); setData(<mask><mask><mask>parse(url));} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content",
    "truth_type": "android.content",
    "full_FQN": "android.content.Context",
    "boolean": 1,
    "context": "public class ad4 { public static void hideKeyboardFrom(<mask><mask><mask>.Context context, android View view) { android InputMethodManager imm = ((android InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE))); hideSoftInputFromWindow getWindowToken(), 0);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.View",
    "truth_type": "android.view.View",
    "full_FQN": "android.view.View.View",
    "boolean": 1,
    "context": "public class ad4 { public static void hideKeyboardFrom(Context context, android <mask><mask><mask><mask><mask>.View view) { android InputMethodManager imm = ((android InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE))); hideSoftInputFromWindow getWindowToken(), 0);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.View.inputmethod",
    "truth_type": "android.view.View.inputmethod",
    "full_FQN": "android.view.View.inputmethod.InputMethodManager",
    "boolean": 1,
    "context": "public class ad4 { public static void hideKeyboardFrom(Context context, android View view) { android <mask><mask><mask><mask><mask><mask><mask><mask>.InputMethodManager imm = ((android InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE))); hideSoftInputFromWindow getWindowToken(), 0);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.View.inputmethod",
    "truth_type": "android.view.View.inputmethod",
    "full_FQN": "android.view.View.inputmethod.InputMethodManager",
    "boolean": 1,
    "context": "public class ad4 { public static void hideKeyboardFrom(Context context, android View view) { android InputMethodManager imm = ((android <mask><mask><mask><mask><mask><mask><mask><mask>.InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE))); hideSoftInputFromWindow getWindowToken(), 0);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content",
    "truth_type": "android.content",
    "full_FQN": "android.content.Context.getSystemService()",
    "boolean": 1,
    "context": "public class ad4 { public static void hideKeyboardFrom(Context context, android View view) { android InputMethodManager imm = ((android InputMethodManager)  <mask><mask><mask>getSystemService(INPUT_METHOD_SERVICE))); hideSoftInputFromWindow getWindowToken(), 0);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view.Table",
    "truth_type": "android.app.Activity",
    "full_FQN": "android.app.Activity.INPUT_METHOD_SERVICE",
    "boolean": 0,
    "context": "public class ad4 { public static void hideKeyboardFrom(Context context, android View view) { android InputMethodManager imm = ((android InputMethodManager)  getSystemService(<mask><mask><mask><mask><mask>.INPUT_METHOD_SERVICE))); hideSoftInputFromWindow getWindowToken(), 0);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "com.view.inputmethod.InputMethodManager",
    "truth_type": "android.view.inputmethod.InputMethodManager",
    "full_FQN": "android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow",
    "boolean": 0,
    "context": "public class ad4 { public static void hideKeyboardFrom(Context context, android View view) { android InputMethodManager imm = ((android InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE))); <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.hideSoftInputFromWindow getWindowToken(), 0);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.view",
    "truth_type": "android.view",
    "full_FQN": "android.view.View.getWindowToken()",
    "boolean": 1,
    "context": "public class ad4 { public static void hideKeyboardFrom(Context context, android View view) { android InputMethodManager imm = ((android InputMethodManager)  getSystemService(INPUT_METHOD_SERVICE))); hideSoftInputFromWindow <mask><mask><mask>getWindowToken(), 0);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "java.util",
    "truth_type": "android.os",
    "full_FQN": "android.os.Bundle",
    "boolean": 0,
    "context": "public class ad5 { public static void h1() { <mask><mask><mask>.Bundle args = new Bundle(); putInt(String, 328); putString(String, String);"
  },
  {
    "lib_name": "android",
    "pred_type": "java.os",
    "truth_type": "android.os",
    "full_FQN": "android.os.Bundle()",
    "boolean": 0,
    "context": "public class ad5 { public static void h1() { Bundle args = new <mask><mask><mask>.Bundle(); putInt(String, 328); putString(String, String);"
  },
  {
    "lib_name": "android",
    "pred_type": "android.os",
    "truth_type": "android.os",
    "full_FQN": "android.os.Bundle.putInt()",
    "boolean": 1,
    "context": "public class ad5 { public static void h1() { Bundle args = new Bundle(); <mask><mask><mask>putInt(String, 328); putString(String, String);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.os",
    "truth_type": "android.os",
    "full_FQN": "android.os.Bundle.putString()",
    "boolean": 1,
    "context": "public class ad5 { public static void h1() { Bundle args = new Bundle(); putInt(String, 328); <mask><mask><mask>putString(String, String);} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.util",
    "truth_type": "android.util",
    "full_FQN": "android.util.DisplayMetrics",
    "boolean": 1,
    "context": "public class ad6 { public void h1() { <mask><mask><mask>.DisplayMetrics displayMetrics = new DisplayMetrics();int height = heightPixels;int width = widthPixels;"
  },
  {
    "lib_name": "android",
    "pred_type": "android.util",
    "truth_type": "android.util",
    "full_FQN": "android.util.DisplayMetrics()",
    "boolean": 1,
    "context": "public class ad6 { public void h1() { DisplayMetrics displayMetrics = new <mask><mask><mask>.DisplayMetrics();int height = heightPixels;int width = widthPixels;"
  },
  {
    "lib_name": "android",
    "pred_type": "android.util.DisplayMetrics",
    "truth_type": "android.util.DisplayMetrics",
    "full_FQN": "android.util.DisplayMetrics.heightPixels",
    "boolean": 1,
    "context": "public class ad6 { public void h1() { DisplayMetrics displayMetrics = new DisplayMetrics();int height = <mask><mask><mask><mask><mask><mask><mask>.heightPixels;int width = widthPixels;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.util.DisplayMetrics",
    "truth_type": "android.util.DisplayMetrics",
    "full_FQN": "android.util.DisplayMetrics.widthPixels",
    "boolean": 1,
    "context": "public class ad6 { public void h1() { DisplayMetrics displayMetrics = new DisplayMetrics();int height = heightPixels;int width = <mask><mask><mask><mask><mask><mask><mask>.widthPixels;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.os.Build.Version",
    "truth_type": "android.os.Build.VERSION",
    "full_FQN": "android.os.Build.VERSION.RELEASE",
    "boolean": 0,
    "context": "public class ad7 { public static String h1() { String release = <mask><mask><mask><mask><mask><mask><mask>.RELEASE;int sdkVersion = SDK_INT;return (((String + sdkVersion) + String) + release) + String;"
  },
  {
    "lib_name": "android",
    "pred_type": "android.os.Host.Software",
    "truth_type": "android.os.Build.VERSION",
    "full_FQN": "android.os.Build.VERSION.SDK_INT",
    "boolean": 0,
    "context": "public class ad7 { public static String h1() { String release = RELEASE;int sdkVersion = <mask><mask><mask><mask><mask><mask><mask>.SDK_INT;return (((String + sdkVersion) + String) + release) + String;} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity",
    "boolean": 1,
    "context": "public class ad8 { public static void setLocale(<mask><mask><mask>.Activity activity, String languageCode) { Locale locale = new Locale(languageCode);setDefault(locale);Resources resources = getResources();"
  },
  {
    "lib_name": "android",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Locale",
    "boolean": 1,
    "context": "public class ad8 { public static void setLocale(Activity activity, String languageCode) { <mask><mask><mask>.Locale locale = new Locale(languageCode);setDefault(locale);Resources resources = getResources();"
  },
  {
    "lib_name": "android",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Locale()",
    "boolean": 1,
    "context": "public class ad8 { public static void setLocale(Activity activity, String languageCode) { Locale locale = new <mask><mask><mask>.Locale(languageCode);setDefault(locale);Resources resources = getResources();"
  },
  {
    "lib_name": "android",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Locale.setDefault()",
    "boolean": 1,
    "context": "public class ad8 { public static void setLocale(Activity activity, String languageCode) { Locale locale = new Locale(languageCode);<mask><mask><mask>setDefault(locale);Resources resources = getResources();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content.res",
    "truth_type": "android.content.res",
    "full_FQN": "android.content.res.Resources",
    "boolean": 1,
    "context": "public class ad8 { public static void setLocale(Activity activity, String languageCode) { Locale locale = new Locale(languageCode);setDefault(locale);<mask><mask><mask><mask><mask>.Resources resources = getResources();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.Activity.getResources()",
    "boolean": 1,
    "context": "public class ad8 { public static void setLocale(Activity activity, String languageCode) { Locale locale = new Locale(languageCode);setDefault(locale);Resources resources = <mask><mask><mask>.getResources();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Locale",
    "boolean": 1,
    "context": "public class ad9 { public static void h1() { String languageToLoad = String;<mask><mask><mask>.Locale locale = new Locale(languageToLoad);Configuration config = new Configuration();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Locale()",
    "boolean": 1,
    "context": "public class ad9 { public static void h1() { String languageToLoad = String;Locale locale = new <mask><mask><mask>.Locale(languageToLoad);Configuration config = new Configuration();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content.res",
    "truth_type": "android.content.res",
    "full_FQN": "android.content.res.Configuration",
    "boolean": 1,
    "context": "public class ad9 { public static void h1() { String languageToLoad = String;Locale locale = new Locale(languageToLoad);<mask><mask><mask><mask><mask>.Configuration config = new Configuration();} };"
  },
  {
    "lib_name": "android",
    "pred_type": "android.content",
    "truth_type": "android.content",
    "full_FQN": "android.content.res.Configuration()",
    "boolean": 1,
    "context": "public class ad9 { public static void h1() { String languageToLoad = String;Locale locale = new Locale(languageToLoad);Configuration config = new <mask><mask><mask>Configuration();} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.logging",
    "truth_type": "java.util.logging",
    "full_FQN": "java.util.logging.Logger",
    "boolean": 1,
    "context": "public class gt1 { public void onModuleLoad() { <mask><mask><mask><mask><mask><mask>.Logger logger = getLogger(String); log(INFO, String);println(String);"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.logging",
    "truth_type": "java.util.logging",
    "full_FQN": "java.util.logging.Logger.getLogger()",
    "boolean": 1,
    "context": "public class gt1 { public void onModuleLoad() { Logger logger = <mask><mask><mask><mask><mask><mask>getLogger(String); log(INFO, String);println(String);"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.logging",
    "truth_type": "java.util.logging",
    "full_FQN": "java.util.logging.Logger.log()",
    "boolean": 1,
    "context": "public class gt1 { public void onModuleLoad() { Logger logger = getLogger(String); <mask><mask><mask><mask><mask><mask>log(INFO, String);println(String);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.logging.Level",
    "truth_type": "java.util.logging.Level",
    "full_FQN": "java.util.logging.Level.INFO",
    "boolean": 1,
    "context": "public class gt1 { public void onModuleLoad() { Logger logger = getLogger(String); log(<mask><mask><mask><mask><mask><mask><mask><mask>.INFO, String);println(String);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client.ui",
    "truth_type": "com.google.gwt.user.client.ui",
    "full_FQN": "com.google.gwt.user.client.ui.HorizontalSplitPanel",
    "boolean": 1,
    "context": "public class gt10 { public void onModuleLoad() { <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.HorizontalSplitPanel split = new HorizontalSplitPanel();DecoratorPanel dp = new DecoratorPanel();get().add(dp);"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client",
    "truth_type": "com.google.gwt.user.client",
    "full_FQN": "com.google.gwt.user.client.ui.HorizontalSplitPanel()",
    "boolean": 1,
    "context": "public class gt10 { public void onModuleLoad() { HorizontalSplitPanel split = new <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>HorizontalSplitPanel();DecoratorPanel dp = new DecoratorPanel();get().add(dp);"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client.ui",
    "truth_type": "com.google.gwt.user.client.ui",
    "full_FQN": "com.google.gwt.user.client.ui.DecoratorPanel",
    "boolean": 1,
    "context": "public class gt10 { public void onModuleLoad() { HorizontalSplitPanel split = new HorizontalSplitPanel();<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.DecoratorPanel dp = new DecoratorPanel();get().add(dp);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client",
    "truth_type": "com.google.gwt.user.client",
    "full_FQN": "com.google.gwt.user.client.ui.DecoratorPanel()",
    "boolean": 1,
    "context": "public class gt10 { public void onModuleLoad() { HorizontalSplitPanel split = new HorizontalSplitPanel();DecoratorPanel dp = new <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>DecoratorPanel();get().add(dp);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client.ui",
    "truth_type": "com.google.gwt.user.client.ui",
    "full_FQN": "com.google.gwt.user.client.ui.RootPanel.get()",
    "boolean": 1,
    "context": "public class gt10 { public void onModuleLoad() { HorizontalSplitPanel split = new HorizontalSplitPanel();DecoratorPanel dp = new DecoratorPanel();<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>get().add(dp);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.logging",
    "truth_type": "java.util.logging",
    "full_FQN": "java.util.logging.Logger",
    "boolean": 1,
    "context": "public class gt11 { public static void h1() { <mask><mask><mask><mask><mask><mask>.Logger logger = getLogger(String); log(SEVERE, String);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.logging",
    "truth_type": "java.util.logging",
    "full_FQN": "java.util.logging.Logger.getLogger()",
    "boolean": 1,
    "context": "public class gt11 { public static void h1() { Logger logger = <mask><mask><mask><mask><mask><mask>getLogger(String); log(SEVERE, String);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.logging",
    "truth_type": "java.util.logging",
    "full_FQN": "java.util.logging.Logger.log()",
    "boolean": 1,
    "context": "public class gt11 { public static void h1() { Logger logger = getLogger(String); <mask><mask><mask><mask><mask><mask>log(SEVERE, String);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.logging.Level",
    "truth_type": "java.util.logging.Level",
    "full_FQN": "java.util.logging.Level.SEVERE",
    "boolean": 1,
    "context": "public class gt11 { public static void h1() { Logger logger = getLogger(String); log(<mask><mask><mask><mask><mask><mask><mask><mask>.SEVERE, String);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "javafx.scene.layout",
    "truth_type": "javafx.scene.control",
    "full_FQN": "javafx.scene.control.Labeled",
    "boolean": 0,
    "context": "public class gt12 { public void h1() { <mask><mask><mask><mask><mask><mask><mask><mask>.Labeled label = null;if (getToken().equals(String)) { setText(String);} } };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.android.tools....Stats",
    "truth_type": "com.google.gwt.user.client",
    "full_FQN": "com.google.gwt.user.client.History.getToken()",
    "boolean": 0,
    "context": "public class gt12 { public void h1() { Labeled label = null;if (<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>getToken().equals(String)) { setText(String);} } };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "javaxx.scene.control",
    "truth_type": "javafx.scene.control",
    "full_FQN": "javafx.scene.control.Labeled.setText()",
    "boolean": 0,
    "context": "public class gt12 { public void h1() { Labeled label = null;if (getToken().equals(String)) { <mask><mask><mask><mask><mask><mask><mask><mask>setText(String);} } };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google",
    "truth_type": "com.google",
    "full_FQN": "com.google.gwt",
    "boolean": 1,
    "context": "public class gt13 { public final void h1(final <mask><mask><mask>.gwt ValueChangeEvent<String> event) { String token = getValue();if (token != null) { String[] tokens = getToken().split(String);final String token2 = (length > 1) ? tokens[1] : String;"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.event.logical.shared.ValueChangeEvent.logical.shared",
    "truth_type": "com.google.gwt.event.logical.shared.ValueChangeEvent.logical.shared",
    "full_FQN": "com.google.gwt.event.logical.shared.ValueChangeEvent.logical.shared.ValueChangeEvent",
    "boolean": 1,
    "context": "public class gt13 { public final void h1(final gwt <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ValueChangeEvent<String> event) { String token = getValue();if (token != null) { String[] tokens = getToken().split(String);final String token2 = (length > 1) ? tokens[1] : String;"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.event.logical.shared",
    "truth_type": "com.google.gwt.event.logical.shared",
    "full_FQN": "com.google.gwt.event.logical.shared.ValueChangeEvent.getValue()",
    "boolean": 1,
    "context": "public class gt13 { public final void h1(final gwt ValueChangeEvent<String> event) { String token = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>getValue();if (token != null) { String[] tokens = getToken().split(String);final String token2 = (length > 1) ? tokens[1] : String;"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client",
    "truth_type": "com.google.gwt.user.client",
    "full_FQN": "com.google.gwt.user.client.History.getToken()",
    "boolean": 1,
    "context": "public class gt13 { public final void h1(final gwt ValueChangeEvent<String> event) { String token = getValue();if (token != null) { String[] tokens = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>getToken().split(String);final String token2 = (length > 1) ? tokens[1] : String;} } };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client.ui",
    "truth_type": "com.google.gwt.user.client.ui",
    "full_FQN": "com.google.gwt.user.client.ui.RootLayoutPanel",
    "boolean": 1,
    "context": "public class gt14 { public static void h1() { <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.RootLayoutPanel rootLayoutPanel = get();DockLayoutPanel dock = new DockLayoutPanel();} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client.ui",
    "truth_type": "com.google.gwt.user.client.ui",
    "full_FQN": "com.google.gwt.user.client.ui.RootLayoutPanel.get()",
    "boolean": 1,
    "context": "public class gt14 { public static void h1() { RootLayoutPanel rootLayoutPanel = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>get();DockLayoutPanel dock = new DockLayoutPanel();} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client.ui",
    "truth_type": "com.google.gwt.user.client.ui",
    "full_FQN": "com.google.gwt.user.client.ui.DockLayoutPanel",
    "boolean": 1,
    "context": "public class gt14 { public static void h1() { RootLayoutPanel rootLayoutPanel = get();<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.DockLayoutPanel dock = new DockLayoutPanel();} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client",
    "truth_type": "com.google.gwt.user.client",
    "full_FQN": "com.google.gwt.user.client.ui.DockLayoutPanel()",
    "boolean": 1,
    "context": "public class gt14 { public static void h1() { RootLayoutPanel rootLayoutPanel = get();DockLayoutPanel dock = new <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>DockLayoutPanel();} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date",
    "boolean": 1,
    "context": "public class gt15 { public static void h1() { final <mask><mask><mask>.Date dueDate = new Date();addDaysToDate(dueDate, 21);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date()",
    "boolean": 1,
    "context": "public class gt15 { public static void h1() { final Date dueDate = new <mask><mask><mask>.Date();addDaysToDate(dueDate, 21);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user..pinternal.client",
    "truth_type": "com.google.gwt.user.datepicker.client",
    "full_FQN": "com.google.gwt.user.datepicker.client.CalendarUtil.addDaysToDate()",
    "boolean": 0,
    "context": "public class gt15 { public static void h1() { final Date dueDate = new Date();<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>addDaysToDate(dueDate, 21);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date",
    "boolean": 1,
    "context": "public class gt16 { @SuppressWarnings(String) public static void addDaysToDate(<mask><mask><mask>.Date date, int days) { setDate getDate() + days);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.Date",
    "truth_type": "java.util.Date",
    "full_FQN": "java.util.Date.setDate",
    "boolean": 1,
    "context": "public class gt16 { @SuppressWarnings(String) public static void addDaysToDate(Date date, int days) { <mask><mask><mask><mask><mask>.setDate getDate() + days);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date.getDate()",
    "boolean": 1,
    "context": "public class gt16 { @SuppressWarnings(String) public static void addDaysToDate(Date date, int days) { setDate <mask><mask><mask>getDate() + days);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.event.shared",
    "truth_type": "com.google.gwt.event.shared",
    "full_FQN": "com.google.gwt.event.shared.EventHandler",
    "boolean": 1,
    "context": "public abstract class gt17<CategoryChangeHandler extends <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.EventHandler> extends GwtEvent<CategoryChangeHandler> { private List<Category> category;public void h1() { final Type<CategoryChangeHandler> TYPE = new Type<CategoryChangeHandler>();} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.event.shared",
    "truth_type": "com.google.gwt.event.shared",
    "full_FQN": "com.google.gwt.event.shared.GwtEvent",
    "boolean": 1,
    "context": "public abstract class gt17<CategoryChangeHandler extends EventHandler> extends <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.GwtEvent<CategoryChangeHandler> { private List<Category> category;public void h1() { final Type<CategoryChangeHandler> TYPE = new Type<CategoryChangeHandler>();} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.List",
    "boolean": 1,
    "context": "public abstract class gt17<CategoryChangeHandler extends EventHandler> extends GwtEvent<CategoryChangeHandler> { private <mask><mask><mask>.List<Category> category;public void h1() { final Type<CategoryChangeHandler> TYPE = new Type<CategoryChangeHandler>();} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user..erver",
    "truth_type": "com.google.gwt.junit.client",
    "full_FQN": "com.google.gwt.junit.client.Category",
    "boolean": 0,
    "context": "public abstract class gt17<CategoryChangeHandler extends EventHandler> extends GwtEvent<CategoryChangeHandler> { private List<<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Category> category;public void h1() { final Type<CategoryChangeHandler> TYPE = new Type<CategoryChangeHandler>();} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.gwt",
    "truth_type": "java.gwt",
    "full_FQN": "java.gwt.Type",
    "boolean": 1,
    "context": "public abstract class gt17<CategoryChangeHandler extends EventHandler> extends GwtEvent<CategoryChangeHandler> { private List<Category> category;public void h1() { final <mask><mask><mask><mask>.Type<CategoryChangeHandler> TYPE = new Type<CategoryChangeHandler>();} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.gwt",
    "truth_type": "java.gwt",
    "full_FQN": "java.gwt.Type",
    "boolean": 1,
    "context": "public abstract class gt17<CategoryChangeHandler extends EventHandler> extends GwtEvent<CategoryChangeHandler> { private List<Category> category;public void h1() { final Type<CategoryChangeHandler> TYPE = new <mask><mask><mask><mask>.Type<CategoryChangeHandler>();} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Formatter",
    "boolean": 1,
    "context": "public class gt18 { public static String h1() { <mask><mask><mask>.Formatter format = new Formatter();int matches = 0;Formatter formattedString = format(String, matches);"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Formatter()",
    "boolean": 1,
    "context": "public class gt18 { public static String h1() { Formatter format = new <mask><mask><mask>.Formatter();int matches = 0;Formatter formattedString = format(String, matches);"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Formatter",
    "boolean": 1,
    "context": "public class gt18 { public static String h1() { Formatter format = new Formatter();int matches = 0;<mask><mask><mask>.Formatter formattedString = format(String, matches);return null;} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Formatter.format()",
    "boolean": 1,
    "context": "public class gt18 { public static String h1() { Formatter format = new Formatter();int matches = 0;Formatter formattedString = <mask><mask><mask>format(String, matches);return null;} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google",
    "truth_type": "com.google",
    "full_FQN": "com.google.gwt",
    "boolean": 1,
    "context": "public class gt2 { public final void onValueChange(final <mask><mask><mask>.gwt ValueChangeEvent<String> event) { String token = getValue();if (token != null) { String[] tokens = getToken().split(String);} } };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.event.logical.shared.ValueChangeEvent.logical.shared",
    "truth_type": "com.google.gwt.event.logical.shared.ValueChangeEvent.logical.shared",
    "full_FQN": "com.google.gwt.event.logical.shared.ValueChangeEvent.logical.shared.ValueChangeEvent",
    "boolean": 1,
    "context": "public class gt2 { public final void onValueChange(final gwt <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ValueChangeEvent<String> event) { String token = getValue();if (token != null) { String[] tokens = getToken().split(String);} } };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.event.logical.shared",
    "truth_type": "com.google.gwt.event.logical.shared",
    "full_FQN": "com.google.gwt.event.logical.shared.ValueChangeEvent.getValue()",
    "boolean": 1,
    "context": "public class gt2 { public final void onValueChange(final gwt ValueChangeEvent<String> event) { String token = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>getValue();if (token != null) { String[] tokens = getToken().split(String);} } };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.dev.client",
    "truth_type": "com.google.gwt.user.client",
    "full_FQN": "com.google.gwt.user.client.History.getToken()",
    "boolean": 0,
    "context": "public class gt2 { public final void onValueChange(final gwt ValueChangeEvent<String> event) { String token = getValue();if (token != null) { String[] tokens = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>getToken().split(String);} } };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.core.client",
    "truth_type": "com.google.gwt.core.client",
    "full_FQN": "com.google.gwt.core.client.EntryPoint",
    "boolean": 1,
    "context": "public class gt20 implements <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.EntryPoint { public void onModuleLoad() { alert(String);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client",
    "truth_type": "com.google.gwt.user.client",
    "full_FQN": "com.google.gwt.user.client.Window.alert()",
    "boolean": 1,
    "context": "public class gt20 implements EntryPoint { public void onModuleLoad() { <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>alert(String);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client.ui",
    "truth_type": "com.google.gwt.user.client.ui",
    "full_FQN": "com.google.gwt.user.client.ui.RootLayoutPanel",
    "boolean": 1,
    "context": "public class gt3 { public static void h1() { <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.RootLayoutPanel rootLayoutPanel = get();DockLayoutPanel dock = new DockLayoutPanel(); add(dock);"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client.ui",
    "truth_type": "com.google.gwt.user.client.ui",
    "full_FQN": "com.google.gwt.user.client.ui.RootLayoutPanel.get()",
    "boolean": 1,
    "context": "public class gt3 { public static void h1() { RootLayoutPanel rootLayoutPanel = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>get();DockLayoutPanel dock = new DockLayoutPanel(); add(dock);"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client.ui",
    "truth_type": "com.google.gwt.user.client.ui",
    "full_FQN": "com.google.gwt.user.client.ui.DockLayoutPanel",
    "boolean": 1,
    "context": "public class gt3 { public static void h1() { RootLayoutPanel rootLayoutPanel = get();<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.DockLayoutPanel dock = new DockLayoutPanel(); add(dock);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client",
    "truth_type": "com.google.gwt.user.client",
    "full_FQN": "com.google.gwt.user.client.ui.DockLayoutPanel()",
    "boolean": 1,
    "context": "public class gt3 { public static void h1() { RootLayoutPanel rootLayoutPanel = get();DockLayoutPanel dock = new <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>DockLayoutPanel(); add(dock);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.google.gwt.user.client.ui",
    "truth_type": "com.google.gwt.user.client.ui",
    "full_FQN": "com.google.gwt.user.client.ui.RootLayoutPanel.add()",
    "boolean": 1,
    "context": "public class gt3 { public static void h1() { RootLayoutPanel rootLayoutPanel = get();DockLayoutPanel dock = new DockLayoutPanel(); <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>add(dock);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date",
    "boolean": 1,
    "context": "public class gt4 { public static void h1() { final <mask><mask><mask>.Date dueDate = new Date();addDaysToDate(dueDate, 21);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date()",
    "boolean": 1,
    "context": "public class gt4 { public static void h1() { final Date dueDate = new <mask><mask><mask>.Date();addDaysToDate(dueDate, 21);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "com.sun.orgwt.user..pinternal.util",
    "truth_type": "com.google.gwt.user.datepicker.client",
    "full_FQN": "com.google.gwt.user.datepicker.client.CalendarUtil.addDaysToDate()",
    "boolean": 0,
    "context": "public class gt4 { public static void h1() { final Date dueDate = new Date();<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>addDaysToDate(dueDate, 21);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date",
    "boolean": 1,
    "context": "public class gt5 { private <mask><mask><mask>.Date addDays(Date dateIn, int numDays) { long milisPerDay = 86400000;long dateInMilis = getTime();return new Date(dateInMilis);"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date",
    "boolean": 1,
    "context": "public class gt5 { private Date addDays(<mask><mask><mask>.Date dateIn, int numDays) { long milisPerDay = 86400000;long dateInMilis = getTime();return new Date(dateInMilis);"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date.getTime()",
    "boolean": 1,
    "context": "public class gt5 { private Date addDays(Date dateIn, int numDays) { long milisPerDay = 86400000;long dateInMilis = <mask><mask><mask>getTime();return new Date(dateInMilis);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date()",
    "boolean": 1,
    "context": "public class gt5 { private Date addDays(Date dateIn, int numDays) { long milisPerDay = 86400000;long dateInMilis = getTime();return new <mask><mask><mask>.Date(dateInMilis);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.math",
    "truth_type": "java.math",
    "full_FQN": "java.math.BigInteger()",
    "boolean": 1,
    "context": "public class gt6 { public static void h1() { long time = currentTimeMillis();long milisPerYear = new <mask><mask><mask>.BigInteger(String).longValue();String currentYear = valueOf(((int) (floor(time / milisPerYear))) + 1970);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.regex",
    "truth_type": "java.util.regex",
    "full_FQN": "java.util.regex.Pattern",
    "boolean": 1,
    "context": "public class gt7 { <mask><mask><mask><mask><mask><mask>.Pattern pattern = compile(String);Matcher matcher = matcher(String);boolean matchFound = find();"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.regex",
    "truth_type": "java.util.regex",
    "full_FQN": "java.util.regex.Pattern.compile()",
    "boolean": 1,
    "context": "public class gt7 { Pattern pattern = <mask><mask><mask><mask><mask><mask>compile(String);Matcher matcher = matcher(String);boolean matchFound = find();"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.regex",
    "truth_type": "java.util.regex",
    "full_FQN": "java.util.regex.Matcher",
    "boolean": 1,
    "context": "public class gt7 { Pattern pattern = compile(String);<mask><mask><mask><mask><mask><mask>.Matcher matcher = matcher(String);boolean matchFound = find();};"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.regex",
    "truth_type": "java.util.regex",
    "full_FQN": "java.util.regex.Pattern.matcher()",
    "boolean": 1,
    "context": "public class gt7 { Pattern pattern = compile(String);Matcher matcher = <mask><mask><mask><mask><mask><mask>matcher(String);boolean matchFound = find();};"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util.regex",
    "truth_type": "java.util.regex",
    "full_FQN": "java.util.regex.Matcher.find()",
    "boolean": 1,
    "context": "public class gt7 { Pattern pattern = compile(String);Matcher matcher = matcher(String);boolean matchFound = <mask><mask><mask><mask><mask><mask>find();};"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date",
    "boolean": 1,
    "context": "public class gt8 { public <mask><mask><mask>.Date parse(String dateString) { try { return new SimpleDateFormat(String).parse(dateString);} catch (Exception ex) { throw new IllegalArgumentException(String + dateString);} } };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat()",
    "boolean": 1,
    "context": "public class gt8 { public Date parse(String dateString) { try { return new <mask><mask><mask>.SimpleDateFormat(String).parse(dateString);} catch (Exception ex) { throw new IllegalArgumentException(String + dateString);} } };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date",
    "boolean": 1,
    "context": "public class gt9 { public String format(<mask><mask><mask>.Date date) { return getFormat(String).format(date);} };"
  },
  {
    "lib_name": "gwt",
    "pred_type": "org.joda.time.format.Dateldtype",
    "truth_type": "com.google.gwt.i18n.client",
    "full_FQN": "com.google.gwt.i18n.client.DateTimeFormat.getFormat()",
    "boolean": 0,
    "context": "public class gt9 { public String format(Date date) { return <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>getFormat(String).format(date);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.cfg",
    "truth_type": "org.hibernate.cfg",
    "full_FQN": "org.hibernate.cfg.Configuration",
    "boolean": 1,
    "context": "public class hb1 { public static void h1() { <mask><mask><mask><mask><mask><mask><mask><mask>.Configuration configuration = new Configuration().configure();} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.cfg.Configuration()",
    "boolean": 1,
    "context": "public class hb1 { public static void h1() { Configuration configuration = new <mask><mask><mask><mask><mask><mask>Configuration().configure();} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.List",
    "boolean": 1,
    "context": "public class hb10 { public void h1(<mask><mask><mask>.List<String> list) { String args = null;run(class, args);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "java.aw..server",
    "truth_type": "org.springframework.boot",
    "full_FQN": "org.springframework.boot.SpringApplication.run()",
    "boolean": 0,
    "context": "public class hb10 { public void h1(List<String> list) { String args = null;<mask><mask><mask><mask><mask><mask>run(class, args);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "java.n.jar..ication",
    "truth_type": "javafx.application.Application",
    "full_FQN": "javafx.application.Application.class",
    "boolean": 0,
    "context": "public class hb10 { public void h1(List<String> list) { String args = null;run(<mask><mask><mask><mask><mask><mask><mask><mask>.class, args);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.cfg",
    "truth_type": "org.hibernate.cfg",
    "full_FQN": "org.hibernate.cfg.Configuration",
    "boolean": 1,
    "context": "public class hb11 { private <mask><mask><mask><mask><mask><mask><mask><mask>.Configuration configuration;private SessionFactory sessionFactory;private Session session;"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.SessionFactory",
    "boolean": 1,
    "context": "public class hb11 { private Configuration configuration;private <mask><mask><mask><mask><mask><mask>.SessionFactory sessionFactory;private Session session;private Transaction transaction;"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.Session",
    "boolean": 1,
    "context": "public class hb11 { private Configuration configuration;private SessionFactory sessionFactory;private <mask><mask><mask><mask><mask><mask>.Session session;private Transaction transaction;};"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.Transaction",
    "boolean": 1,
    "context": "private SessionFactory sessionFactory;private Session session;private <mask><mask><mask><mask><mask><mask>.Transaction transaction;};"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.typeations",
    "truth_type": "org.hibernate.annotations",
    "full_FQN": "org.hibernate.annotations.Type",
    "boolean": 0,
    "context": "public class hb12 { public <mask><mask><mask><mask><mask><mask><mask><mask><mask>.Type getReturnType(Type columnType, Mapping mapping) throws QueryException { int[] sqlTypes = new int[0];if (length != 1) { throw new QueryException(String);} return columnType;"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.typeations",
    "truth_type": "org.hibernate.annotations",
    "full_FQN": "org.hibernate.annotations.Type",
    "boolean": 0,
    "context": "public class hb12 { public Type getReturnType(<mask><mask><mask><mask><mask><mask><mask><mask><mask>.Type columnType, Mapping mapping) throws QueryException { int[] sqlTypes = new int[0];if (length != 1) { throw new QueryException(String);} return columnType;"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.engine",
    "truth_type": "org.hibernate.engine",
    "full_FQN": "org.hibernate.engine.Mapping",
    "boolean": 1,
    "context": "public class hb12 { public Type getReturnType(Type columnType, <mask><mask><mask><mask><mask><mask><mask><mask>.Mapping mapping) throws QueryException { int[] sqlTypes = new int[0];if (length != 1) { throw new QueryException(String);} return columnType;"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.QueryException",
    "boolean": 1,
    "context": "public class hb12 { public Type getReturnType(Type columnType, Mapping mapping) throws <mask><mask><mask><mask><mask><mask>.QueryException { int[] sqlTypes = new int[0];if (length != 1) { throw new QueryException(String);} return columnType;"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.QueryException()",
    "boolean": 1,
    "context": "public class hb12 { public Type getReturnType(Type columnType, Mapping mapping) throws QueryException { int[] sqlTypes = new int[0];if (length != 1) { throw new <mask><mask><mask><mask><mask><mask>.QueryException(String);} return columnType;} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.annotations",
    "truth_type": "org.hibernate.annotations",
    "full_FQN": "org.hibernate.annotations.Type",
    "boolean": 1,
    "context": "public class hb13 { private <mask><mask><mask><mask><mask><mask><mask><mask><mask>.Type h1(Class clazz) throws HibernateException { String typename = getName();return ((Type) (entity(clazz)));} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.HibernateException",
    "boolean": 1,
    "context": "public class hb13 { private Type h1(Class clazz) throws <mask><mask><mask><mask><mask><mask>.HibernateException { String typename = getName();return ((Type) (entity(clazz)));} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.annotations",
    "truth_type": "org.hibernate.annotations",
    "full_FQN": "org.hibernate.annotations.Type",
    "boolean": 1,
    "context": "public class hb13 { private Type h1(Class clazz) throws HibernateException { String typename = getName();return ((<mask><mask><mask><mask><mask><mask><mask><mask><mask>.Type) (entity(clazz)));} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.Hibernate.entity()",
    "boolean": 1,
    "context": "public class hb13 { private Type h1(Class clazz) throws HibernateException { String typename = getName();return ((Type) (<mask><mask><mask><mask><mask><mask>entity(clazz)));} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.mapping",
    "truth_type": "org.hibernate.mapping",
    "full_FQN": "org.hibernate.mapping.List",
    "boolean": 1,
    "context": "public class hb14 { public static void h1(<mask><mask><mask><mask><mask><mask><mask><mask><mask>.List model) { SimpleValue iv = new SimpleValue getCollectionTable()); setIndex(iv);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.mapping",
    "truth_type": "org.hibernate.mapping",
    "full_FQN": "org.hibernate.mapping.SimpleValue",
    "boolean": 1,
    "context": "public class hb14 { public static void h1(List model) { <mask><mask><mask><mask><mask><mask><mask><mask><mask>.SimpleValue iv = new SimpleValue getCollectionTable()); setIndex(iv);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.mapping",
    "truth_type": "org.hibernate.mapping",
    "full_FQN": "org.hibernate.mapping.SimpleValue",
    "boolean": 1,
    "context": "public class hb14 { public static void h1(List model) { SimpleValue iv = new <mask><mask><mask><mask><mask><mask><mask><mask><mask>.SimpleValue getCollectionTable()); setIndex(iv);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.mapping",
    "truth_type": "org.hibernate.mapping",
    "full_FQN": "org.hibernate.mapping.List.getCollectionTable()",
    "boolean": 1,
    "context": "public class hb14 { public static void h1(List model) { SimpleValue iv = new SimpleValue <mask><mask><mask><mask><mask><mask><mask><mask><mask>getCollectionTable()); setIndex(iv);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.mapping",
    "truth_type": "org.hibernate.mapping",
    "full_FQN": "org.hibernate.mapping.List.setIndex()",
    "boolean": 1,
    "context": "public class hb14 { public static void h1(List model) { SimpleValue iv = new SimpleValue getCollectionTable()); <mask><mask><mask><mask><mask><mask><mask><mask><mask>setIndex(iv);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "jakarta.persistence",
    "truth_type": "javax.persistence",
    "full_FQN": "javax.persistence.OneToMany()",
    "boolean": 0,
    "context": "public class hb15<GlobalConfigScope> { private static Object Type;@<mask><mask><mask><mask><mask><mask>.OneToMany(cascade = ALL, mappedBy = String, orphanRemoval = true) private Set<GlobalConfigScope> gcScopeSet;};"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "jakarta.persistence.CascadeType",
    "truth_type": "javax.persistence.CascadeType",
    "full_FQN": "javax.persistence.CascadeType.ALL",
    "boolean": 0,
    "context": "public class hb15<GlobalConfigScope> { private static Object Type;@OneToMany(cascade = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ALL, mappedBy = String, orphanRemoval = true) private Set<GlobalConfigScope> gcScopeSet;};"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Set",
    "boolean": 1,
    "context": "public class hb15<GlobalConfigScope> { private static Object Type;@OneToMany(cascade = ALL, mappedBy = String, orphanRemoval = true) private <mask><mask><mask>.Set<GlobalConfigScope> gcScopeSet;};"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "jakarta.persistence",
    "truth_type": "javax.persistence",
    "full_FQN": "javax.persistence.OneToMany()",
    "boolean": 0,
    "context": "public class hb16<Car_OneToMany> { @<mask><mask><mask><mask><mask><mask>.OneToMany(cascade = { ALL }) @Column(name = String) private List<Car_OneToMany> listOfCarsBeingDriven = new ArrayList<Car_OneToMany>();};"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "jakarta.persistence.CascadeType",
    "truth_type": "javax.persistence.CascadeType",
    "full_FQN": "javax.persistence.CascadeType.ALL",
    "boolean": 0,
    "context": "public class hb16<Car_OneToMany> { @OneToMany(cascade = { <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ALL }) @Column(name = String) private List<Car_OneToMany> listOfCarsBeingDriven = new ArrayList<Car_OneToMany>();};"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "jakarta.persistence",
    "truth_type": "javax.persistence",
    "full_FQN": "javax.persistence.Column()",
    "boolean": 0,
    "context": "public class hb16<Car_OneToMany> { @OneToMany(cascade = { ALL }) @<mask><mask><mask><mask><mask><mask>.Column(name = String) private List<Car_OneToMany> listOfCarsBeingDriven = new ArrayList<Car_OneToMany>();};"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.List",
    "boolean": 1,
    "context": "public class hb16<Car_OneToMany> { @OneToMany(cascade = { ALL }) @Column(name = String) private <mask><mask><mask>.List<Car_OneToMany> listOfCarsBeingDriven = new ArrayList<Car_OneToMany>();};"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.ArrayList",
    "boolean": 1,
    "context": "public class hb16<Car_OneToMany> { @OneToMany(cascade = { ALL }) @Column(name = String) private List<Car_OneToMany> listOfCarsBeingDriven = new <mask><mask><mask>.ArrayList<Car_OneToMany>();};"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.apache.apache.loading",
    "truth_type": "org.apache.log4j",
    "full_FQN": "org.apache.log4j.Appender",
    "boolean": 0,
    "context": "public class hb17 { public static void h1() { <mask><mask><mask><mask><mask><mask><mask>.Appender clazz = null;String typename = getName();Type type = ((Type) (hibernate heuristicType(typename)));"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.apache.h4cs",
    "truth_type": "org.apache.log4j",
    "full_FQN": "org.apache.log4j.Appender.getName()",
    "boolean": 0,
    "context": "public class hb17 { public static void h1() { Appender clazz = null;String typename = <mask><mask><mask><mask><mask><mask><mask>getName();Type type = ((Type) (hibernate heuristicType(typename)));boolean serializable = (type != null) && (type instanceof hibernate SerializableType);"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.annotations",
    "truth_type": "org.hibernate.annotations",
    "full_FQN": "org.hibernate.annotations.Type",
    "boolean": 1,
    "context": "public class hb17 { public static void h1() { Appender clazz = null;String typename = getName();<mask><mask><mask><mask><mask><mask><mask><mask><mask>.Type type = ((Type) (hibernate heuristicType(typename)));boolean serializable = (type != null) && (type instanceof hibernate SerializableType);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.annotations",
    "truth_type": "org.hibernate.annotations",
    "full_FQN": "org.hibernate.annotations.Type",
    "boolean": 1,
    "context": "public class hb17 { public static void h1() { Appender clazz = null;String typename = getName();Type type = ((<mask><mask><mask><mask><mask><mask><mask><mask><mask>.Type) (hibernate heuristicType(typename)));boolean serializable = (type != null) && (type instanceof hibernate SerializableType);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.langibernate.typeations.Type",
    "truth_type": "org.hibernate.annotations.Type",
    "full_FQN": "org.hibernate.annotations.Type.TypeFactory.heuristicType()",
    "boolean": 0,
    "context": "public class hb17 { public static void h1() { Appender clazz = null;String typename = getName();Type type = ((Type) (hibernate <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>heuristicType(typename)));boolean serializable = (type != null) && (type instanceof hibernate SerializableType);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.langibernate.typeations.Type",
    "truth_type": "org.hibernate.annotations.Type",
    "full_FQN": "org.hibernate.annotations.Type.SerializableType",
    "boolean": 0,
    "context": "java.lang.String typename = getName();Type type = ((Type) (hibernate heuristicType(typename)));boolean serializable = (type != null) && (type instanceof hibernate <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.SerializableType);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.mapping",
    "truth_type": "org.hibernate.mapping",
    "full_FQN": "org.hibernate.mapping.List",
    "boolean": 1,
    "context": "public class hb18 { public static void h1() { <mask><mask><mask><mask><mask><mask><mask><mask><mask>.List model = null;SimpleValue iv = new SimpleValue getCollectionTable()); setIndex(iv);"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.mapping",
    "truth_type": "org.hibernate.mapping",
    "full_FQN": "org.hibernate.mapping.SimpleValue",
    "boolean": 1,
    "context": "public class hb18 { public static void h1() { List model = null;<mask><mask><mask><mask><mask><mask><mask><mask><mask>.SimpleValue iv = new SimpleValue getCollectionTable()); setIndex(iv);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.mapping",
    "truth_type": "org.hibernate.mapping",
    "full_FQN": "org.hibernate.mapping.SimpleValue",
    "boolean": 1,
    "context": "public class hb18 { public static void h1() { List model = null;SimpleValue iv = new <mask><mask><mask><mask><mask><mask><mask><mask><mask>.SimpleValue getCollectionTable()); setIndex(iv);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.mapping",
    "truth_type": "org.hibernate.mapping",
    "full_FQN": "org.hibernate.mapping.List.getCollectionTable()",
    "boolean": 1,
    "context": "public class hb18 { public static void h1() { List model = null;SimpleValue iv = new SimpleValue <mask><mask><mask><mask><mask><mask><mask><mask><mask>getCollectionTable()); setIndex(iv);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.mapping",
    "truth_type": "org.hibernate.mapping",
    "full_FQN": "org.hibernate.mapping.List.setIndex()",
    "boolean": 1,
    "context": "public class hb18 { public static void h1() { List model = null;SimpleValue iv = new SimpleValue getCollectionTable()); <mask><mask><mask><mask><mask><mask><mask><mask><mask>setIndex(iv);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.annotations",
    "truth_type": "org.hibernate.annotations",
    "full_FQN": "org.hibernate.annotations.Type",
    "boolean": 1,
    "context": "public class hb19 { public static void h1() { String typename = null;<mask><mask><mask><mask><mask><mask><mask><mask><mask>.Type type = ((Type) (hibernate heuristicType(typename)));boolean serializable = (type != null) && (type instanceof hibernate SerializableType);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.annotations",
    "truth_type": "org.hibernate.annotations",
    "full_FQN": "org.hibernate.annotations.Type",
    "boolean": 1,
    "context": "public class hb19 { public static void h1() { String typename = null;Type type = ((<mask><mask><mask><mask><mask><mask><mask><mask><mask>.Type) (hibernate heuristicType(typename)));boolean serializable = (type != null) && (type instanceof hibernate SerializableType);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.langibernate.typeations.Type",
    "truth_type": "org.hibernate.annotations.Type",
    "full_FQN": "org.hibernate.annotations.Type.TypeFactory.heuristicType()",
    "boolean": 0,
    "context": "public class hb19 { public static void h1() { String typename = null;Type type = ((Type) (hibernate <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>heuristicType(typename)));boolean serializable = (type != null) && (type instanceof hibernate SerializableType);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.langibernate.typeations.Type",
    "truth_type": "org.hibernate.annotations.Type",
    "full_FQN": "org.hibernate.annotations.Type.SerializableType",
    "boolean": 0,
    "context": "public class hb19 { public static void h1() { String typename = null;Type type = ((Type) (hibernate heuristicType(typename)));boolean serializable = (type != null) && (type instanceof hibernate <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.SerializableType);} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "jakarta.persistence",
    "truth_type": "javax.persistence",
    "full_FQN": "javax.persistence.Entity",
    "boolean": 0,
    "context": "public class hb2 { @<mask><mask><mask><mask><mask><mask>.Entity public static class University<Student> { private String address;@OneToMany(fetch = LAZY) private List<Student> students;} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "jakarta.persistence",
    "truth_type": "javax.persistence",
    "full_FQN": "javax.persistence.OneToMany()",
    "boolean": 0,
    "context": "public class hb2 { @Entity public static class University<Student> { private String address;@<mask><mask><mask><mask><mask><mask>.OneToMany(fetch = LAZY) private List<Student> students;} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "jakarta.persistence.FetchType",
    "truth_type": "javax.persistence.FetchType",
    "full_FQN": "javax.persistence.FetchType.LAZY",
    "boolean": 0,
    "context": "public class hb2 { @Entity public static class University<Student> { private String address;@OneToMany(fetch = <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.LAZY) private List<Student> students;} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.List",
    "boolean": 1,
    "context": "public class hb2 { @Entity public static class University<Student> { private String address;@OneToMany(fetch = LAZY) private <mask><mask><mask>.List<Student> students;} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.test.trans...hand",
    "truth_type": "net.sf.gilead.core.hibernate",
    "full_FQN": "net.sf.gilead.core.hibernate.HibernateUtil",
    "boolean": 0,
    "context": "public class hb20 { private static <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.HibernateUtil HibernateUtils;public static void h1() { Transaction tx = null;FragmentManager session = null;"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.Transaction",
    "boolean": 1,
    "context": "public class hb20 { private static HibernateUtil HibernateUtils;public static void h1() { <mask><mask><mask><mask><mask><mask>.Transaction tx = null;FragmentManager session = null;tx = ((Transaction)  beginTransaction()));"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.FragmentManager",
    "boolean": 1,
    "context": "public class hb20 { private static HibernateUtil HibernateUtils;public static void h1() { Transaction tx = null;<mask><mask><mask>.FragmentManager session = null;tx = ((Transaction)  beginTransaction()));} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.Transaction",
    "boolean": 1,
    "context": "public static void h1() { Transaction tx = null;FragmentManager session = null;tx = ((<mask><mask><mask><mask><mask><mask>.Transaction)  beginTransaction()));} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "android.app",
    "truth_type": "android.app",
    "full_FQN": "android.app.FragmentManager.beginTransaction()",
    "boolean": 1,
    "context": "public static void h1() { Transaction tx = null;FragmentManager session = null;tx = ((Transaction)  <mask><mask><mask>beginTransaction()));} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.Serializable",
    "boolean": 1,
    "context": "public class hb3 implements <mask><mask><mask>.Serializable { @Before public void h1() { hibernate Configuration cfg = new hibernate Configuration().configure();Object sr = null;} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.junit",
    "truth_type": "org.junit",
    "full_FQN": "org.junit.Before",
    "boolean": 1,
    "context": "public class hb3 implements Serializable { @<mask><mask><mask><mask>.Before public void h1() { hibernate Configuration cfg = new hibernate Configuration().configure();Object sr = null;} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.cfg.Configuration",
    "truth_type": "org.hibernate.cfg.Configuration",
    "full_FQN": "org.hibernate.cfg.Configuration.Configuration",
    "boolean": 1,
    "context": "public class hb3 implements Serializable { @Before public void h1() { hibernate <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Configuration cfg = new hibernate Configuration().configure();Object sr = null;} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.cfg",
    "truth_type": "org.hibernate.cfg",
    "full_FQN": "org.hibernate.cfg.Configuration.Configuration()",
    "boolean": 1,
    "context": "public class hb3 implements Serializable { @Before public void h1() { hibernate Configuration cfg = new hibernate <mask><mask><mask><mask><mask><mask><mask><mask>Configuration().configure();Object sr = null;} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.Session",
    "boolean": 1,
    "context": "public class hb4 { public static <mask><mask><mask><mask><mask><mask>.Session getSessionobject() { SessionFactory sessionFactory = null;assert false;return getCurrentSession();"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.SessionFactory",
    "boolean": 1,
    "context": "public class hb4 { public static Session getSessionobject() { <mask><mask><mask><mask><mask><mask>.SessionFactory sessionFactory = null;assert false;return getCurrentSession();"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.SessionFactory.getCurrentSession()",
    "boolean": 1,
    "context": "public class hb4 { public static Session getSessionobject() { SessionFactory sessionFactory = null;assert false;return <mask><mask><mask><mask><mask><mask>getCurrentSession();} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.junit",
    "truth_type": "org.junit",
    "full_FQN": "org.junit.Test",
    "boolean": 1,
    "context": "public class hb5 { @<mask><mask><mask><mask>.Test public void textTx() { SessionFactory sessionFactory = null;Session session = null;Transaction tx;"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.SessionFactory",
    "boolean": 1,
    "context": "public class hb5 { @Test public void textTx() { <mask><mask><mask><mask><mask><mask>.SessionFactory sessionFactory = null;Session session = null;Transaction tx;"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.Session",
    "boolean": 1,
    "context": "<mask><mask><mask><mask><mask><mask>.Session session = null;"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.Transaction",
    "boolean": 1,
    "context": "public class hb5 { @Test public void textTx() { SessionFactory sessionFactory = null;Session session = null;<mask><mask><mask><mask><mask><mask>.Transaction tx;} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.cfg",
    "truth_type": "org.hibernate.cfg",
    "full_FQN": "org.hibernate.cfg.Configuration",
    "boolean": 1,
    "context": "public class hb6 { public static void h1() { <mask><mask><mask><mask><mask><mask><mask><mask>.Configuration config = new Configuration().configure();SessionFactory sessionFactory = buildSessionFactory();} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.cfg.Configuration()",
    "boolean": 1,
    "context": "public class hb6 { public static void h1() { Configuration config = new <mask><mask><mask><mask><mask><mask>Configuration().configure();SessionFactory sessionFactory = buildSessionFactory();} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.SessionFactory",
    "boolean": 1,
    "context": "public class hb6 { public static void h1() { Configuration config = new Configuration().configure();<mask><mask><mask><mask><mask><mask>.SessionFactory sessionFactory = buildSessionFactory();} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.cfg",
    "truth_type": "org.hibernate.cfg",
    "full_FQN": "org.hibernate.cfg.Configuration.buildSessionFactory()",
    "boolean": 1,
    "context": "public class hb6 { public static void h1() { Configuration config = new Configuration().configure();SessionFactory sessionFactory = <mask><mask><mask><mask><mask><mask><mask><mask>buildSessionFactory();} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.cfg",
    "truth_type": "org.hibernate.cfg",
    "full_FQN": "org.hibernate.cfg.Configuration",
    "boolean": 1,
    "context": "public class hb7 { public static void h1() { <mask><mask><mask><mask><mask><mask><mask><mask>.Configuration config = new Configuration().configure();SessionFactory sessionFactory = buildSessionFactory();Session session = openSession();"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.cfg.Configuration()",
    "boolean": 1,
    "context": "public class hb7 { public static void h1() { Configuration config = new <mask><mask><mask><mask><mask><mask>Configuration().configure();SessionFactory sessionFactory = buildSessionFactory();Session session = openSession();"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.SessionFactory",
    "boolean": 1,
    "context": "public class hb7 { public static void h1() { Configuration config = new Configuration().configure();<mask><mask><mask><mask><mask><mask>.SessionFactory sessionFactory = buildSessionFactory();Session session = openSession();} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate.cfg",
    "truth_type": "org.hibernate.cfg",
    "full_FQN": "org.hibernate.cfg.Configuration.buildSessionFactory()",
    "boolean": 1,
    "context": "public class hb7 { public static void h1() { Configuration config = new Configuration().configure();SessionFactory sessionFactory = <mask><mask><mask><mask><mask><mask><mask><mask>buildSessionFactory();Session session = openSession();} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.Session",
    "boolean": 1,
    "context": "public class hb7 { public static void h1() { Configuration config = new Configuration().configure();SessionFactory sessionFactory = buildSessionFactory();<mask><mask><mask><mask><mask><mask>.Session session = openSession();} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.SessionFactory.openSession()",
    "boolean": 1,
    "context": "public class hb7 { public static void h1() { Configuration config = new Configuration().configure();SessionFactory sessionFactory = buildSessionFactory();Session session = <mask><mask><mask><mask><mask><mask>openSession();} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.SessionFactory",
    "boolean": 1,
    "context": "public class hb8 { public static void h1() { <mask><mask><mask><mask><mask><mask>.SessionFactory sessionFactory = null;Session session = openSession();Object s = null;"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.Session",
    "boolean": 1,
    "context": "public class hb8 { public static void h1() { SessionFactory sessionFactory = null;<mask><mask><mask><mask><mask><mask>.Session session = openSession();Object s = null;} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.SessionFactory.openSession()",
    "boolean": 1,
    "context": "public class hb8 { public static void h1() { SessionFactory sessionFactory = null;Session session = <mask><mask><mask><mask><mask><mask>openSession();Object s = null;} };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.HibernateException",
    "boolean": 1,
    "context": "public class hb9 { public static void h1() throws <mask><mask><mask><mask><mask><mask>.HibernateException { boolean begun = false;if (!begun) { throw new TransactionException(String);} } };"
  },
  {
    "lib_name": "hibernate",
    "pred_type": "org.hibernate",
    "truth_type": "org.hibernate",
    "full_FQN": "org.hibernate.TransactionException()",
    "boolean": 1,
    "context": "public class hb9 { public static void h1() throws HibernateException { boolean begun = false;if (!begun) { throw new <mask><mask><mask><mask><mask><mask>.TransactionException(String);} } };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.util.function",
    "truth_type": "java.util.function",
    "full_FQN": "java.util.function.IntBinaryOperator",
    "boolean": 1,
    "context": "public class jdk { static void h1() { <mask><mask><mask><mask><mask>.IntBinaryOperator plusOperation = ( a, b) -> a + b;println(String + applyAsInt(10, 34));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.util.function",
    "truth_type": "java.util.function",
    "full_FQN": "java.util.function.IntBinaryOperator.applyAsInt()",
    "boolean": 1,
    "context": "public class jdk { static void h1() { IntBinaryOperator plusOperation = ( a, b) -> a + b;println(String + <mask><mask><mask><mask><mask>applyAsInt(10, 34));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.File",
    "boolean": 1,
    "context": "public class jdk10 { public void h1() { <mask><mask><mask>.File is = null;try { FileInputStream input = new FileInputStream(is);} catch (FileNotFoundException e1) { printStackTrace();"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.FileInputStream",
    "boolean": 1,
    "context": "public class jdk10 { public void h1() { File is = null;try { <mask><mask><mask>.FileInputStream input = new FileInputStream(is);} catch (FileNotFoundException e1) { printStackTrace();} } };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.FileInputStream()",
    "boolean": 1,
    "context": "public class jdk10 { public void h1() { File is = null;try { FileInputStream input = new <mask><mask><mask>.FileInputStream(is);} catch (FileNotFoundException e1) { printStackTrace();} } };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.FileNotFoundException",
    "boolean": 1,
    "context": "public class jdk10 { public void h1() { File is = null;try { FileInputStream input = new FileInputStream(is);} catch (<mask><mask><mask>.FileNotFoundException e1) { printStackTrace();} } };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.FileNotFoundException.printStackTrace()",
    "boolean": 1,
    "context": "public class jdk10 { public void h1() { File is = null;try { FileInputStream input = new FileInputStream(is);} catch (FileNotFoundException e1) { <mask><mask><mask>printStackTrace();} } };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.IOException",
    "boolean": 1,
    "context": "public class jdk14 { public static void h1(String aFile) throws <mask><mask><mask>.IOException { Desktop desktop = getDesktop(); open(new File(aFile));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.awt",
    "truth_type": "java.awt",
    "full_FQN": "java.awt.Desktop",
    "boolean": 1,
    "context": "public class jdk14 { public static void h1(String aFile) throws IOException { <mask><mask><mask><mask>.Desktop desktop = getDesktop(); open(new File(aFile));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.awt",
    "truth_type": "java.awt",
    "full_FQN": "java.awt.Desktop.getDesktop()",
    "boolean": 1,
    "context": "public class jdk14 { public static void h1(String aFile) throws IOException { Desktop desktop = <mask><mask><mask><mask>getDesktop(); open(new File(aFile));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.awt",
    "truth_type": "java.awt",
    "full_FQN": "java.awt.Desktop.open()",
    "boolean": 1,
    "context": "public class jdk14 { public static void h1(String aFile) throws IOException { Desktop desktop = getDesktop(); <mask><mask><mask><mask>open(new File(aFile));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.File()",
    "boolean": 1,
    "context": "public class jdk14 { public static void h1(String aFile) throws IOException { Desktop desktop = getDesktop(); open(new <mask><mask><mask>.File(aFile));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Arrays.toString()",
    "boolean": 1,
    "context": "public class jdk15 { public static void h1(String[] args) { byte[] b = new byte[]{ -5, -122, -28 };println(String + <mask><mask><mask>toString(b));println(String + length);} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat",
    "boolean": 1,
    "context": "public class jdk16 { public static void h1(String[] args) { <mask><mask><mask>.SimpleDateFormat sf = new SimpleDateFormat(String);String str3 = String;} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat()",
    "boolean": 1,
    "context": "public class jdk16 { public static void h1(String[] args) { SimpleDateFormat sf = new <mask><mask><mask>.SimpleDateFormat(String);String str3 = String;} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.InputStream",
    "boolean": 1,
    "context": "public class jdk17 { private static <mask><mask><mask>.InputStream stream;public static void h1() throws IOException { int bufferSize = 1024;char[] buffer = new char[bufferSize];"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.IOException",
    "boolean": 1,
    "context": "public class jdk17 { private static InputStream stream;public static void h1() throws <mask><mask><mask>.IOException { int bufferSize = 1024;char[] buffer = new char[bufferSize];Reader in = new InputStreamReader(stream, UTF_8);"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.Reader",
    "boolean": 1,
    "context": "public static void h1() throws IOException { int bufferSize = 1024;char[] buffer = new char[bufferSize];<mask><mask><mask>.Reader in = new InputStreamReader(stream, UTF_8);} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.InputStreamReader()",
    "boolean": 1,
    "context": "public static void h1() throws IOException { int bufferSize = 1024;char[] buffer = new char[bufferSize];Reader in = new <mask><mask><mask>.InputStreamReader(stream, UTF_8);} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "sun.n.http.UtReference",
    "truth_type": "java.jdk.jdk17",
    "full_FQN": "java.jdk.jdk17.stream",
    "boolean": 0,
    "context": "public static void h1() throws IOException { int bufferSize = 1024;char[] buffer = new char[bufferSize];Reader in = new InputStreamReader(<mask><mask><mask><mask><mask><mask><mask><mask>.stream, UTF_8);} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.nio.charset.StandardCharsets",
    "truth_type": "java.nio.charset.StandardCharsets",
    "full_FQN": "java.nio.charset.StandardCharsets.UTF_8",
    "boolean": 1,
    "context": "public static void h1() throws IOException { int bufferSize = 1024;char[] buffer = new char[bufferSize];Reader in = new InputStreamReader(stream, <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.UTF_8);} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.InputStream",
    "boolean": 1,
    "context": "public class jdk18 { private static <mask><mask><mask>.InputStream inputStream;public static String h1() throws IOException { StringWriter writer = new StringWriter();copy(inputStream, writer, String);"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.IOException",
    "boolean": 1,
    "context": "public class jdk18 { private static InputStream inputStream;public static String h1() throws <mask><mask><mask>.IOException { StringWriter writer = new StringWriter();copy(inputStream, writer, String);return toString();"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.StringWriter",
    "boolean": 1,
    "context": "public class jdk18 { private static InputStream inputStream;public static String h1() throws IOException { <mask><mask><mask>.StringWriter writer = new StringWriter();copy(inputStream, writer, String);return toString();"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.StringWriter()",
    "boolean": 1,
    "context": "public class jdk18 { private static InputStream inputStream;public static String h1() throws IOException { StringWriter writer = new <mask><mask><mask>.StringWriter();copy(inputStream, writer, String);return toString();"
  },
  {
    "lib_name": "jdk",
    "pred_type": "j.ax.imageio.stream",
    "truth_type": "org.apache.commons.io",
    "full_FQN": "org.apache.commons.io.IOUtils.copy()",
    "boolean": 0,
    "context": "public class jdk18 { private static InputStream inputStream;public static String h1() throws IOException { StringWriter writer = new StringWriter();<mask><mask><mask><mask><mask><mask><mask><mask>copy(inputStream, writer, String);return toString();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.StringWriter.toString()",
    "boolean": 1,
    "context": "public static String h1() throws IOException { StringWriter writer = new StringWriter();copy(inputStream, writer, String);return <mask><mask><mask>toString();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.File",
    "boolean": 1,
    "context": "public class jdk2 { public static void main(String[] args) { String userDirPropertyName = String;<mask><mask><mask>.File initialUserDir = new File(getProperty(userDirPropertyName));println((String + getAbsolutePath()) + String);} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.File()",
    "boolean": 1,
    "context": "public class jdk2 { public static void main(String[] args) { String userDirPropertyName = String;File initialUserDir = new <mask><mask><mask>.File(getProperty(userDirPropertyName));println((String + getAbsolutePath()) + String);} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.File.getAbsolutePath()",
    "boolean": 1,
    "context": "public class jdk2 { public static void main(String[] args) { String userDirPropertyName = String;File initialUserDir = new File(getProperty(userDirPropertyName));println((String + <mask><mask><mask>getAbsolutePath()) + String);} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.InputStream",
    "boolean": 1,
    "context": "public class jdk20 { private static <mask><mask><mask>.InputStream inputStream;public static void h1() throws IOException { BufferedInputStream bis = new BufferedInputStream(inputStream);ByteArrayOutputStream buf = new ByteArrayOutputStream();"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.IOException",
    "boolean": 1,
    "context": "public class jdk20 { private static InputStream inputStream;public static void h1() throws <mask><mask><mask>.IOException { BufferedInputStream bis = new BufferedInputStream(inputStream);ByteArrayOutputStream buf = new ByteArrayOutputStream();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.BufferedInputStream",
    "boolean": 1,
    "context": "public class jdk20 { private static InputStream inputStream;public static void h1() throws IOException { <mask><mask><mask>.BufferedInputStream bis = new BufferedInputStream(inputStream);ByteArrayOutputStream buf = new ByteArrayOutputStream();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.BufferedInputStream()",
    "boolean": 1,
    "context": "public class jdk20 { private static InputStream inputStream;public static void h1() throws IOException { BufferedInputStream bis = new <mask><mask><mask>.BufferedInputStream(inputStream);ByteArrayOutputStream buf = new ByteArrayOutputStream();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.ByteArrayOutputStream",
    "boolean": 1,
    "context": "public class jdk20 { private static InputStream inputStream;public static void h1() throws IOException { BufferedInputStream bis = new BufferedInputStream(inputStream);<mask><mask><mask>.ByteArrayOutputStream buf = new ByteArrayOutputStream();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.ByteArrayOutputStream()",
    "boolean": 1,
    "context": "public class jdk20 { private static InputStream inputStream;public static void h1() throws IOException { BufferedInputStream bis = new BufferedInputStream(inputStream);ByteArrayOutputStream buf = new <mask><mask><mask>.ByteArrayOutputStream();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.ParseException",
    "boolean": 1,
    "context": "public class jdk3 { public static void h1(String oldDate, String format) throws <mask><mask><mask>.ParseException { DateTimeFormatter dtf = ofPattern(format);LocalDateTime dt = parse(oldDate, dtf);ZonedDateTime zdtzone = atZone(of(String));"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.time.format",
    "truth_type": "java.time.format",
    "full_FQN": "java.time.format.DateTimeFormatter",
    "boolean": 1,
    "context": "public class jdk3 { public static void h1(String oldDate, String format) throws ParseException { <mask><mask><mask><mask><mask>.DateTimeFormatter dtf = ofPattern(format);LocalDateTime dt = parse(oldDate, dtf);ZonedDateTime zdtzone = atZone(of(String));"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.time.format",
    "truth_type": "java.time.format",
    "full_FQN": "java.time.format.DateTimeFormatter.ofPattern()",
    "boolean": 1,
    "context": "public class jdk3 { public static void h1(String oldDate, String format) throws ParseException { DateTimeFormatter dtf = <mask><mask><mask><mask><mask>ofPattern(format);LocalDateTime dt = parse(oldDate, dtf);ZonedDateTime zdtzone = atZone(of(String));"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.LocalDateTime",
    "boolean": 1,
    "context": "public class jdk3 { public static void h1(String oldDate, String format) throws ParseException { DateTimeFormatter dtf = ofPattern(format);<mask><mask><mask>.LocalDateTime dt = parse(oldDate, dtf);ZonedDateTime zdtzone = atZone(of(String));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.LocalDateTime.parse()",
    "boolean": 1,
    "context": "public class jdk3 { public static void h1(String oldDate, String format) throws ParseException { DateTimeFormatter dtf = ofPattern(format);LocalDateTime dt = <mask><mask><mask>parse(oldDate, dtf);ZonedDateTime zdtzone = atZone(of(String));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZonedDateTime",
    "boolean": 1,
    "context": "public class jdk3 { public static void h1(String oldDate, String format) throws ParseException { DateTimeFormatter dtf = ofPattern(format);LocalDateTime dt = parse(oldDate, dtf);<mask><mask><mask>.ZonedDateTime zdtzone = atZone(of(String));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.LocalDateTime.atZone()",
    "boolean": 1,
    "context": "public class jdk3 { public static void h1(String oldDate, String format) throws ParseException { DateTimeFormatter dtf = ofPattern(format);LocalDateTime dt = parse(oldDate, dtf);ZonedDateTime zdtzone = <mask><mask><mask>atZone(of(String));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZoneId.of()",
    "boolean": 1,
    "context": "public class jdk3 { public static void h1(String oldDate, String format) throws ParseException { DateTimeFormatter dtf = ofPattern(format);LocalDateTime dt = parse(oldDate, dtf);ZonedDateTime zdtzone = atZone(<mask><mask><mask>of(String));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.ParseException",
    "boolean": 1,
    "context": "public class jdk4 { public static void h1(String oldDate, String format) throws <mask><mask><mask>.ParseException { SimpleDateFormat sdf = new SimpleDateFormat(format);Date dt = parse(oldDate);long epoch = getTime();"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat",
    "boolean": 1,
    "context": "public class jdk4 { public static void h1(String oldDate, String format) throws ParseException { <mask><mask><mask>.SimpleDateFormat sdf = new SimpleDateFormat(format);Date dt = parse(oldDate);long epoch = getTime();"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat()",
    "boolean": 1,
    "context": "public class jdk4 { public static void h1(String oldDate, String format) throws ParseException { SimpleDateFormat sdf = new <mask><mask><mask>.SimpleDateFormat(format);Date dt = parse(oldDate);long epoch = getTime();"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date",
    "boolean": 1,
    "context": "public class jdk4 { public static void h1(String oldDate, String format) throws ParseException { SimpleDateFormat sdf = new SimpleDateFormat(format);<mask><mask><mask>.Date dt = parse(oldDate);long epoch = getTime();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat.parse()",
    "boolean": 1,
    "context": "public class jdk4 { public static void h1(String oldDate, String format) throws ParseException { SimpleDateFormat sdf = new SimpleDateFormat(format);Date dt = <mask><mask><mask>parse(oldDate);long epoch = getTime();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date.getTime()",
    "boolean": 1,
    "context": "public class jdk4 { public static void h1(String oldDate, String format) throws ParseException { SimpleDateFormat sdf = new SimpleDateFormat(format);Date dt = parse(oldDate);long epoch = <mask><mask><mask>getTime();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.net",
    "truth_type": "java.net",
    "full_FQN": "java.net.MalformedURLException",
    "boolean": 1,
    "context": "public class jdk5 { public static void f1() throws <mask><mask><mask>.MalformedURLException { File jar = new File(String);URLClassLoader loader = new URLClassLoader(new URL[]{ toURI().toURL() });} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.File",
    "boolean": 1,
    "context": "public class jdk5 { public static void f1() throws MalformedURLException { <mask><mask><mask>.File jar = new File(String);URLClassLoader loader = new URLClassLoader(new URL[]{ toURI().toURL() });} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.File()",
    "boolean": 1,
    "context": "public class jdk5 { public static void f1() throws MalformedURLException { File jar = new <mask><mask><mask>.File(String);URLClassLoader loader = new URLClassLoader(new URL[]{ toURI().toURL() });} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.net",
    "truth_type": "java.net",
    "full_FQN": "java.net.URLClassLoader",
    "boolean": 1,
    "context": "public class jdk5 { public static void f1() throws MalformedURLException { File jar = new File(String);<mask><mask><mask>.URLClassLoader loader = new URLClassLoader(new URL[]{ toURI().toURL() });} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.net",
    "truth_type": "java.net",
    "full_FQN": "java.net.URLClassLoader()",
    "boolean": 1,
    "context": "public class jdk5 { public static void f1() throws MalformedURLException { File jar = new File(String);URLClassLoader loader = new <mask><mask><mask>.URLClassLoader(new URL[]{ toURI().toURL() });} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.net",
    "truth_type": "java.net",
    "full_FQN": "java.net.URL",
    "boolean": 1,
    "context": "public class jdk5 { public static void f1() throws MalformedURLException { File jar = new File(String);URLClassLoader loader = new URLClassLoader(new <mask><mask><mask>.URL[]{ toURI().toURL() });} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.File.toURI()",
    "boolean": 1,
    "context": "public class jdk5 { public static void f1() throws MalformedURLException { File jar = new File(String);URLClassLoader loader = new URLClassLoader(new URL[]{ <mask><mask><mask>toURI().toURL() });} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.PropertyPermission()",
    "boolean": 1,
    "context": "public class jdk6 { private static boolean h1() { boolean hasPermission = true;SecurityManager sm = getSecurityManager();if (sm != null) { checkPermission(new <mask><mask><mask>.PropertyPermission(String, String));} return hasPermission;} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.ParseException",
    "boolean": 1,
    "context": "public class jdk7 { public static void h1() throws <mask><mask><mask>.ParseException { SimpleDateFormat formatter = new SimpleDateFormat(String); setTimeZone(getTimeZone(String));Date date = parse(String);"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat",
    "boolean": 1,
    "context": "public class jdk7 { public static void h1() throws ParseException { <mask><mask><mask>.SimpleDateFormat formatter = new SimpleDateFormat(String); setTimeZone(getTimeZone(String));Date date = parse(String);"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat()",
    "boolean": 1,
    "context": "public class jdk7 { public static void h1() throws ParseException { SimpleDateFormat formatter = new <mask><mask><mask>.SimpleDateFormat(String); setTimeZone(getTimeZone(String));Date date = parse(String);"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat.setTimeZone()",
    "boolean": 1,
    "context": "public class jdk7 { public static void h1() throws ParseException { SimpleDateFormat formatter = new SimpleDateFormat(String); <mask><mask><mask>setTimeZone(getTimeZone(String));Date date = parse(String);} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.TimeZone.getTimeZone()",
    "boolean": 1,
    "context": "public class jdk7 { public static void h1() throws ParseException { SimpleDateFormat formatter = new SimpleDateFormat(String); setTimeZone(<mask><mask><mask>getTimeZone(String));Date date = parse(String);} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date",
    "boolean": 1,
    "context": "public class jdk7 { public static void h1() throws ParseException { SimpleDateFormat formatter = new SimpleDateFormat(String); setTimeZone(getTimeZone(String));<mask><mask><mask>.Date date = parse(String);} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat.parse()",
    "boolean": 1,
    "context": "public class jdk7 { public static void h1() throws ParseException { SimpleDateFormat formatter = new SimpleDateFormat(String); setTimeZone(getTimeZone(String));Date date = <mask><mask><mask>parse(String);} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.DecimalFormat",
    "boolean": 1,
    "context": "public class jdk8 { public static void h1() { <mask><mask><mask>.DecimalFormat df = new DecimalFormat(String, new DecimalFormatSymbols(FRANCE));println format(String));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.DecimalFormat()",
    "boolean": 1,
    "context": "public class jdk8 { public static void h1() { DecimalFormat df = new <mask><mask><mask>.DecimalFormat(String, new DecimalFormatSymbols(FRANCE));println format(String));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.DecimalFormatSymbols()",
    "boolean": 1,
    "context": "public class jdk8 { public static void h1() { DecimalFormat df = new DecimalFormat(String, new <mask><mask><mask>.DecimalFormatSymbols(FRANCE));println format(String));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.util.Locale",
    "truth_type": "java.util.Locale",
    "full_FQN": "java.util.Locale.FRANCE",
    "boolean": 1,
    "context": "public class jdk8 { public static void h1() { DecimalFormat df = new DecimalFormat(String, new DecimalFormatSymbols(<mask><mask><mask><mask><mask><mask>.FRANCE));println format(String));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.DecimalFormat.format()",
    "boolean": 1,
    "context": "public class jdk8 { public static void h1() { DecimalFormat df = new DecimalFormat(String, new DecimalFormatSymbols(FRANCE));println <mask><mask><mask>format(String));} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.time.format",
    "truth_type": "java.time.format",
    "full_FQN": "java.time.format.DateTimeFormatter",
    "boolean": 1,
    "context": "public class jdk9 { public static void h1() { <mask><mask><mask><mask><mask>.DateTimeFormatter DATE_FORMAT = new DateTimeFormatterBuilder().appendPattern(String).parseDefaulting(HOUR_OF_DAY, 0).parseDefaulting(MINUTE_OF_HOUR, 0).parseDefaulting(SECOND_OF_MINUTE, 0).toFormatter();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.format.DateTimeFormatterBuilder()",
    "boolean": 1,
    "context": "public class jdk9 { public static void h1() { DateTimeFormatter DATE_FORMAT = new <mask><mask><mask>DateTimeFormatterBuilder().appendPattern(String).parseDefaulting(HOUR_OF_DAY, 0).parseDefaulting(MINUTE_OF_HOUR, 0).parseDefaulting(SECOND_OF_MINUTE, 0).toFormatter();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.time.temporal.ChronoField",
    "truth_type": "java.time.temporal.ChronoField",
    "full_FQN": "java.time.temporal.ChronoField.HOUR_OF_DAY",
    "boolean": 1,
    "context": "public class jdk9 { public static void h1() { DateTimeFormatter DATE_FORMAT = new DateTimeFormatterBuilder().appendPattern(String).parseDefaulting(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.HOUR_OF_DAY, 0).parseDefaulting(MINUTE_OF_HOUR, 0).parseDefaulting(SECOND_OF_MINUTE, 0).toFormatter();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.time.temporal.ChronoField",
    "truth_type": "java.time.temporal.ChronoField",
    "full_FQN": "java.time.temporal.ChronoField.MINUTE_OF_HOUR",
    "boolean": 1,
    "context": "public class jdk9 { public static void h1() { DateTimeFormatter DATE_FORMAT = new DateTimeFormatterBuilder().appendPattern(String).parseDefaulting(HOUR_OF_DAY, 0).parseDefaulting(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.MINUTE_OF_HOUR, 0).parseDefaulting(SECOND_OF_MINUTE, 0).toFormatter();} };"
  },
  {
    "lib_name": "jdk",
    "pred_type": "java.time.temporal.ChronoField",
    "truth_type": "java.time.temporal.ChronoField",
    "full_FQN": "java.time.temporal.ChronoField.SECOND_OF_MINUTE",
    "boolean": 1,
    "context": "public class jdk9 { public static void h1() { DateTimeFormatter DATE_FORMAT = new DateTimeFormatterBuilder().appendPattern(String).parseDefaulting(HOUR_OF_DAY, 0).parseDefaulting(MINUTE_OF_HOUR, 0).parseDefaulting(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.SECOND_OF_MINUTE, 0).toFormatter();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time.format",
    "truth_type": "org.joda.time.format",
    "full_FQN": "org.joda.time.format.DateTimeFormatter",
    "boolean": 1,
    "context": "public class jt1 { public static void f1() { <mask><mask><mask><mask><mask><mask><mask><mask>.DateTimeFormatter dtf = forPattern(String);DateTime jodatime = parseDateTime(String);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time.format",
    "truth_type": "org.joda.time.format",
    "full_FQN": "org.joda.time.format.DateTimeFormat.forPattern()",
    "boolean": 1,
    "context": "public class jt1 { public static void f1() { DateTimeFormatter dtf = <mask><mask><mask><mask><mask><mask><mask><mask>forPattern(String);DateTime jodatime = parseDateTime(String);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime",
    "boolean": 1,
    "context": "public class jt1 { public static void f1() { DateTimeFormatter dtf = forPattern(String);<mask><mask><mask><mask><mask><mask>.DateTime jodatime = parseDateTime(String);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time.format",
    "truth_type": "org.joda.time.format",
    "full_FQN": "org.joda.time.format.DateTimeFormatter.parseDateTime()",
    "boolean": 1,
    "context": "public class jt1 { public static void f1() { DateTimeFormatter dtf = forPattern(String);DateTime jodatime = <mask><mask><mask><mask><mask><mask><mask><mask>parseDateTime(String);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime",
    "boolean": 1,
    "context": "public class jt10 { public static void h1() { <mask><mask><mask><mask><mask><mask>.DateTime now = now();DateTime dateTime = plusMinutes(10);Seconds seconds = secondsBetween(now, dateTime);"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime.now()",
    "boolean": 1,
    "context": "public class jt10 { public static void h1() { DateTime now = <mask><mask><mask><mask><mask><mask>now();DateTime dateTime = plusMinutes(10);Seconds seconds = secondsBetween(now, dateTime);"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime",
    "boolean": 1,
    "context": "public class jt10 { public static void h1() { DateTime now = now();<mask><mask><mask><mask><mask><mask>.DateTime dateTime = plusMinutes(10);Seconds seconds = secondsBetween(now, dateTime);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime.plusMinutes()",
    "boolean": 1,
    "context": "public class jt10 { public static void h1() { DateTime now = now();DateTime dateTime = <mask><mask><mask><mask><mask><mask>plusMinutes(10);Seconds seconds = secondsBetween(now, dateTime);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Seconds",
    "boolean": 1,
    "context": "public class jt10 { public static void h1() { DateTime now = now();DateTime dateTime = plusMinutes(10);<mask><mask><mask><mask><mask><mask>.Seconds seconds = secondsBetween(now, dateTime);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Seconds.secondsBetween()",
    "boolean": 1,
    "context": "public class jt10 { public static void h1() { DateTime now = now();DateTime dateTime = plusMinutes(10);Seconds seconds = <mask><mask><mask><mask><mask><mask>secondsBetween(now, dateTime);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTimeZone",
    "boolean": 1,
    "context": "public class jt11 { public static void h1() { <mask><mask><mask><mask><mask><mask>.DateTimeZone BRAZIL = forID(String);DateTime start = new DateTime(2013, 10, 20, 5, 0, 0, BRAZIL);DateTime end = new DateTime(2013, 10, 21, 13, 0, 0, BRAZIL);"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTimeZone.forID()",
    "boolean": 1,
    "context": "public class jt11 { public static void h1() { DateTimeZone BRAZIL = <mask><mask><mask><mask><mask><mask>forID(String);DateTime start = new DateTime(2013, 10, 20, 5, 0, 0, BRAZIL);DateTime end = new DateTime(2013, 10, 21, 13, 0, 0, BRAZIL);"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime",
    "boolean": 1,
    "context": "public class jt11 { public static void h1() { DateTimeZone BRAZIL = forID(String);<mask><mask><mask><mask><mask><mask>.DateTime start = new DateTime(2013, 10, 20, 5, 0, 0, BRAZIL);DateTime end = new DateTime(2013, 10, 21, 13, 0, 0, BRAZIL);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda",
    "truth_type": "org.joda",
    "full_FQN": "org.joda.time.DateTime()",
    "boolean": 1,
    "context": "public class jt11 { public static void h1() { DateTimeZone BRAZIL = forID(String);DateTime start = new <mask><mask><mask><mask>DateTime(2013, 10, 20, 5, 0, 0, BRAZIL);DateTime end = new DateTime(2013, 10, 21, 13, 0, 0, BRAZIL);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime",
    "boolean": 1,
    "context": "public class jt11 { public static void h1() { DateTimeZone BRAZIL = forID(String);DateTime start = new DateTime(2013, 10, 20, 5, 0, 0, BRAZIL);<mask><mask><mask><mask><mask><mask>.DateTime end = new DateTime(2013, 10, 21, 13, 0, 0, BRAZIL);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda",
    "truth_type": "org.joda",
    "full_FQN": "org.joda.time.DateTime()",
    "boolean": 1,
    "context": "public class jt11 { public static void h1() { DateTimeZone BRAZIL = forID(String);DateTime start = new DateTime(2013, 10, 20, 5, 0, 0, BRAZIL);DateTime end = new <mask><mask><mask><mask>DateTime(2013, 10, 21, 13, 0, 0, BRAZIL);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime",
    "boolean": 1,
    "context": "public class jt12 { public static void h1(<mask><mask><mask><mask><mask><mask>.DateTime end, DateTime start) { daysBetween(new LocalDate(start), new LocalDate(end)).getDays();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime",
    "boolean": 1,
    "context": "public class jt12 { public static void h1(DateTime end, <mask><mask><mask><mask><mask><mask>.DateTime start) { daysBetween(new LocalDate(start), new LocalDate(end)).getDays();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Days.daysBetween()",
    "boolean": 1,
    "context": "public class jt12 { public static void h1(DateTime end, DateTime start) { <mask><mask><mask><mask><mask><mask>daysBetween(new LocalDate(start), new LocalDate(end)).getDays();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda",
    "truth_type": "org.joda",
    "full_FQN": "org.joda.time.LocalDate()",
    "boolean": 1,
    "context": "public class jt12 { public static void h1(DateTime end, DateTime start) { daysBetween(new <mask><mask><mask><mask>LocalDate(start), new LocalDate(end)).getDays();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda",
    "truth_type": "org.joda",
    "full_FQN": "org.joda.time.LocalDate()",
    "boolean": 1,
    "context": "public class jt12 { public static void h1(DateTime end, DateTime start) { daysBetween(new LocalDate(start), new <mask><mask><mask><mask>LocalDate(end)).getDays();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZoneId",
    "boolean": 1,
    "context": "public class jt13 { public static void h1() { <mask><mask><mask>.ZoneId z = of(String);ZonedDateTime now = now(z);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZoneId.of()",
    "boolean": 1,
    "context": "public class jt13 { public static void h1() { ZoneId z = <mask><mask><mask>of(String);ZonedDateTime now = now(z);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZonedDateTime",
    "boolean": 1,
    "context": "public class jt13 { public static void h1() { ZoneId z = of(String);<mask><mask><mask>.ZonedDateTime now = now(z);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZonedDateTime.now()",
    "boolean": 1,
    "context": "public class jt13 { public static void h1() { ZoneId z = of(String);ZonedDateTime now = <mask><mask><mask>now(z);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZoneId",
    "boolean": 1,
    "context": "public class jt14 { public static void h1() { <mask><mask><mask>.ZoneId z = of(String);ZonedDateTime start = of(2017, 1, 17, 14, 45, 0, 0, z);ZonedDateTime stop = of(2017, 1, 17, 15, 12, 0, 0, z);"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZoneId.of()",
    "boolean": 1,
    "context": "public class jt14 { public static void h1() { ZoneId z = <mask><mask><mask>of(String);ZonedDateTime start = of(2017, 1, 17, 14, 45, 0, 0, z);ZonedDateTime stop = of(2017, 1, 17, 15, 12, 0, 0, z);"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZonedDateTime",
    "boolean": 1,
    "context": "public class jt14 { public static void h1() { ZoneId z = of(String);<mask><mask><mask>.ZonedDateTime start = of(2017, 1, 17, 14, 45, 0, 0, z);ZonedDateTime stop = of(2017, 1, 17, 15, 12, 0, 0, z);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZonedDateTime.of()",
    "boolean": 1,
    "context": "public class jt14 { public static void h1() { ZoneId z = of(String);ZonedDateTime start = <mask><mask><mask>of(2017, 1, 17, 14, 45, 0, 0, z);ZonedDateTime stop = of(2017, 1, 17, 15, 12, 0, 0, z);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZonedDateTime",
    "boolean": 1,
    "context": "public class jt14 { public static void h1() { ZoneId z = of(String);ZonedDateTime start = of(2017, 1, 17, 14, 45, 0, 0, z);<mask><mask><mask>.ZonedDateTime stop = of(2017, 1, 17, 15, 12, 0, 0, z);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZonedDateTime.of()",
    "boolean": 1,
    "context": "public class jt14 { public static void h1() { ZoneId z = of(String);ZonedDateTime start = of(2017, 1, 17, 14, 45, 0, 0, z);ZonedDateTime stop = <mask><mask><mask>of(2017, 1, 17, 15, 12, 0, 0, z);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Calendar",
    "boolean": 1,
    "context": "public class jt15 { public static void h1(long timestamp1, long timestamp2) { <mask><mask><mask>.Calendar startDate = getInstance(getDefault());Calendar endDate = getInstance(getDefault());} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Calendar.getInstance()",
    "boolean": 1,
    "context": "public class jt15 { public static void h1(long timestamp1, long timestamp2) { Calendar startDate = <mask><mask><mask>getInstance(getDefault());Calendar endDate = getInstance(getDefault());} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.TimeZone.getDefault()",
    "boolean": 1,
    "context": "public class jt15 { public static void h1(long timestamp1, long timestamp2) { Calendar startDate = getInstance(<mask><mask><mask>getDefault());Calendar endDate = getInstance(getDefault());} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Calendar",
    "boolean": 1,
    "context": "public class jt15 { public static void h1(long timestamp1, long timestamp2) { Calendar startDate = getInstance(getDefault());<mask><mask><mask>.Calendar endDate = getInstance(getDefault());} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Calendar.getInstance()",
    "boolean": 1,
    "context": "public class jt15 { public static void h1(long timestamp1, long timestamp2) { Calendar startDate = getInstance(getDefault());Calendar endDate = <mask><mask><mask>getInstance(getDefault());} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.TimeZone.getDefault()",
    "boolean": 1,
    "context": "public class jt15 { public static void h1(long timestamp1, long timestamp2) { Calendar startDate = getInstance(getDefault());Calendar endDate = getInstance(<mask><mask><mask>getDefault());} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime",
    "boolean": 1,
    "context": "public class jt16 { public static int getDaysBetween(<mask><mask><mask><mask><mask><mask>.DateTime earlier, DateTime later) { return ((int) (toDays getMillis() - getMillis())));} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime",
    "boolean": 1,
    "context": "public class jt16 { public static int getDaysBetween(DateTime earlier, <mask><mask><mask><mask><mask><mask>.DateTime later) { return ((int) (toDays getMillis() - getMillis())));} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time.cono.NANic.Dayster",
    "truth_type": "java.util.concurrent.TimeUnit.MILLISECONDS",
    "full_FQN": "java.util.concurrent.TimeUnit.MILLISECONDS.toDays",
    "boolean": 0,
    "context": "public class jt16 { public static int getDaysBetween(DateTime earlier, DateTime later) { return ((int) (<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.toDays getMillis() - getMillis())));} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime.getMillis()",
    "boolean": 1,
    "context": "public class jt16 { public static int getDaysBetween(DateTime earlier, DateTime later) { return ((int) (toDays <mask><mask><mask><mask><mask><mask>getMillis() - getMillis())));} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime.getMillis()",
    "boolean": 1,
    "context": "public class jt16 { public static int getDaysBetween(DateTime earlier, DateTime later) { return ((int) (toDays getMillis() - <mask><mask><mask><mask><mask><mask>getMillis())));} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time.format",
    "truth_type": "org.joda.time.format",
    "full_FQN": "org.joda.time.format.DateTimeFormatter",
    "boolean": 1,
    "context": "public class jt17 { public static void h1() { String dateTime = String;<mask><mask><mask><mask><mask><mask><mask><mask>.DateTimeFormatter formatter = forPattern(String).withLocale(ROOT).withChronology(getInstanceUTC());DateTime dt = parseDateTime(dateTime);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time.format",
    "truth_type": "org.joda.time.format",
    "full_FQN": "org.joda.time.format.DateTimeFormat.forPattern()",
    "boolean": 1,
    "context": "public class jt17 { public static void h1() { String dateTime = String;DateTimeFormatter formatter = <mask><mask><mask><mask><mask><mask><mask><mask>forPattern(String).withLocale(ROOT).withChronology(getInstanceUTC());DateTime dt = parseDateTime(dateTime);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util.Locale",
    "truth_type": "java.util.Locale",
    "full_FQN": "java.util.Locale.ROOT",
    "boolean": 1,
    "context": "public class jt17 { public static void h1() { String dateTime = String;DateTimeFormatter formatter = forPattern(String).withLocale(<mask><mask><mask><mask><mask><mask>.ROOT).withChronology(getInstanceUTC());DateTime dt = parseDateTime(dateTime);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time.chrono",
    "truth_type": "org.joda.time.chrono",
    "full_FQN": "org.joda.time.chrono.ISOChronology.getInstanceUTC()",
    "boolean": 1,
    "context": "public class jt17 { public static void h1() { String dateTime = String;DateTimeFormatter formatter = forPattern(String).withLocale(ROOT).withChronology(<mask><mask><mask><mask><mask><mask><mask><mask><mask>getInstanceUTC());DateTime dt = parseDateTime(dateTime);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime",
    "boolean": 1,
    "context": "public class jt17 { public static void h1() { String dateTime = String;DateTimeFormatter formatter = forPattern(String).withLocale(ROOT).withChronology(getInstanceUTC());<mask><mask><mask><mask><mask><mask>.DateTime dt = parseDateTime(dateTime);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time.format",
    "truth_type": "org.joda.time.format",
    "full_FQN": "org.joda.time.format.DateTimeFormatter.parseDateTime()",
    "boolean": 1,
    "context": "public class jt17 { public static void h1() { String dateTime = String;DateTimeFormatter formatter = forPattern(String).withLocale(ROOT).withChronology(getInstanceUTC());DateTime dt = <mask><mask><mask><mask><mask><mask><mask><mask>parseDateTime(dateTime);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.ParseException",
    "boolean": 1,
    "context": "public class jt18 { public static void h1() throws <mask><mask><mask>.ParseException { SimpleDateFormat sdf = new SimpleDateFormat(String);// 04/02/2011 20:27:05 Date date = parse(String);println(date);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat",
    "boolean": 1,
    "context": "public class jt18 { public static void h1() throws ParseException { <mask><mask><mask>.SimpleDateFormat sdf = new SimpleDateFormat(String);// 04/02/2011 20:27:05 Date date = parse(String);println(date);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat()",
    "boolean": 1,
    "context": "public class jt18 { public static void h1() throws ParseException { SimpleDateFormat sdf = new <mask><mask><mask>.SimpleDateFormat(String);// 04/02/2011 20:27:05 Date date = parse(String);println(date);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": ".Gregmt",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date",
    "boolean": 0,
    "context": "public class jt18 { public static void h1() throws ParseException { SimpleDateFormat sdf = new SimpleDateFormat(String);// 04/02/2011 20:27:05 <mask><mask><mask>.Date date = parse(String);println(date);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.text",
    "truth_type": "java.text",
    "full_FQN": "java.text.SimpleDateFormat.parse()",
    "boolean": 1,
    "context": "public class jt18 { public static void h1() throws ParseException { SimpleDateFormat sdf = new SimpleDateFormat(String);// 04/02/2011 20:27:05 Date date = <mask><mask><mask>parse(String);println(date);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time.format",
    "truth_type": "java.time.format",
    "full_FQN": "java.time.format.DateTimeFormatter",
    "boolean": 1,
    "context": "public class jt19 { public static void h1() { String input = String;<mask><mask><mask><mask><mask>.DateTimeFormatter f = ofPattern(String);LocalDateTime ldt = parse(input, f);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time.format",
    "truth_type": "java.time.format",
    "full_FQN": "java.time.format.DateTimeFormatter.ofPattern()",
    "boolean": 1,
    "context": "public class jt19 { public static void h1() { String input = String;DateTimeFormatter f = <mask><mask><mask><mask><mask>ofPattern(String);LocalDateTime ldt = parse(input, f);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.LocalDateTime",
    "boolean": 1,
    "context": "public class jt19 { public static void h1() { String input = String;DateTimeFormatter f = ofPattern(String);<mask><mask><mask>.LocalDateTime ldt = parse(input, f);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.LocalDateTime.parse()",
    "boolean": 1,
    "context": "public class jt19 { public static void h1() { String input = String;DateTimeFormatter f = ofPattern(String);LocalDateTime ldt = <mask><mask><mask>parse(input, f);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date",
    "boolean": 1,
    "context": "public class jt2 { public static void f1() { <mask><mask><mask>.Date past = new Date(110, 5, 20);// June 20th, 2010 Date today = new Date(110, 6, 24);// July 24th int days = daysBetween(new DateTime(past), new DateTime(today)).getDays();// => 34 } };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date()",
    "boolean": 1,
    "context": "public class jt2 { public static void f1() { Date past = new <mask><mask><mask>.Date(110, 5, 20);// June 20th, 2010 Date today = new Date(110, 6, 24);// July 24th int days = daysBetween(new DateTime(past), new DateTime(today)).getDays();// => 34 } };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date",
    "boolean": 1,
    "context": "public class jt2 { public static void f1() { Date past = new Date(110, 5, 20);// June 20th, 2010 <mask><mask><mask>.Date today = new Date(110, 6, 24);// July 24th int days = daysBetween(new DateTime(past), new DateTime(today)).getDays();// => 34 } };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Date()",
    "boolean": 1,
    "context": "public class jt2 { public static void f1() { Date past = new Date(110, 5, 20);// June 20th, 2010 Date today = new <mask><mask><mask>.Date(110, 6, 24);// July 24th int days = daysBetween(new DateTime(past), new DateTime(today)).getDays();// => 34 } };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Days.daysBetween()",
    "boolean": 1,
    "context": "public class jt2 { public static void f1() { Date past = new Date(110, 5, 20);// June 20th, 2010 Date today = new Date(110, 6, 24);// July 24th int days = <mask><mask><mask><mask><mask><mask>daysBetween(new DateTime(past), new DateTime(today)).getDays();// => 34 } };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda",
    "truth_type": "org.joda",
    "full_FQN": "org.joda.time.DateTime()",
    "boolean": 1,
    "context": "public class jt2 { public static void f1() { Date past = new Date(110, 5, 20);// June 20th, 2010 Date today = new Date(110, 6, 24);// July 24th int days = daysBetween(new <mask><mask><mask><mask>DateTime(past), new DateTime(today)).getDays();// => 34 } };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda",
    "truth_type": "org.joda",
    "full_FQN": "org.joda.time.DateTime()",
    "boolean": 1,
    "context": "public class jt2 { public static void f1() { Date past = new Date(110, 5, 20);// June 20th, 2010 Date today = new Date(110, 6, 24);// July 24th int days = daysBetween(new DateTime(past), new <mask><mask><mask><mask>DateTime(today)).getDays();// => 34 } };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.MutableDateTime",
    "boolean": 1,
    "context": "public class jt20 { public static void h1() { long date = 0;<mask><mask><mask><mask><mask><mask>.MutableDateTime dateTime = new MutableDateTime(date); addDays(1);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda",
    "truth_type": "org.joda",
    "full_FQN": "org.joda.time.MutableDateTime()",
    "boolean": 1,
    "context": "public class jt20 { public static void h1() { long date = 0;MutableDateTime dateTime = new <mask><mask><mask><mask>MutableDateTime(date); addDays(1);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.MutableDateTime.addDays()",
    "boolean": 1,
    "context": "public class jt20 { public static void h1() { long date = 0;MutableDateTime dateTime = new MutableDateTime(date); <mask><mask><mask><mask><mask><mask>addDays(1);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.LocalDateTime",
    "boolean": 1,
    "context": "public class jt3 { public static void f1() { <mask><mask><mask>.LocalDateTime java8LocalDateTime = now();ZonedDateTime java8ZonedDateTime = atZone(systemDefault());Instant java8Instant = toInstant();"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.LocalDateTime.now()",
    "boolean": 1,
    "context": "public class jt3 { public static void f1() { LocalDateTime java8LocalDateTime = <mask><mask><mask>now();ZonedDateTime java8ZonedDateTime = atZone(systemDefault());Instant java8Instant = toInstant();"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZonedDateTime",
    "boolean": 1,
    "context": "public class jt3 { public static void f1() { LocalDateTime java8LocalDateTime = now();<mask><mask><mask>.ZonedDateTime java8ZonedDateTime = atZone(systemDefault());Instant java8Instant = toInstant();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.LocalDateTime.atZone()",
    "boolean": 1,
    "context": "public class jt3 { public static void f1() { LocalDateTime java8LocalDateTime = now();ZonedDateTime java8ZonedDateTime = <mask><mask><mask>atZone(systemDefault());Instant java8Instant = toInstant();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZoneId.systemDefault()",
    "boolean": 1,
    "context": "public class jt3 { public static void f1() { LocalDateTime java8LocalDateTime = now();ZonedDateTime java8ZonedDateTime = atZone(<mask><mask><mask>systemDefault());Instant java8Instant = toInstant();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.Instant",
    "boolean": 1,
    "context": "public class jt3 { public static void f1() { LocalDateTime java8LocalDateTime = now();ZonedDateTime java8ZonedDateTime = atZone(systemDefault());<mask><mask><mask>.Instant java8Instant = toInstant();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZonedDateTime.toInstant()",
    "boolean": 1,
    "context": "public class jt3 { public static void f1() { LocalDateTime java8LocalDateTime = now();ZonedDateTime java8ZonedDateTime = atZone(systemDefault());Instant java8Instant = <mask><mask><mask>toInstant();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Period",
    "boolean": 1,
    "context": "public class jt4 { public static boolean isLonger(<mask><mask><mask><mask><mask><mask>.Period p1, Period p2) { Instant now = now();Duration d1 = toDurationTo(now);Duration d2 = toDurationTo(now);"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Period",
    "boolean": 1,
    "context": "public class jt4 { public static boolean isLonger(Period p1, <mask><mask><mask><mask><mask><mask>.Period p2) { Instant now = now();Duration d1 = toDurationTo(now);Duration d2 = toDurationTo(now);"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Instant",
    "boolean": 1,
    "context": "public class jt4 { public static boolean isLonger(Period p1, Period p2) { <mask><mask><mask><mask><mask><mask>.Instant now = now();Duration d1 = toDurationTo(now);Duration d2 = toDurationTo(now);"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Instant.now()",
    "boolean": 1,
    "context": "public class jt4 { public static boolean isLonger(Period p1, Period p2) { Instant now = <mask><mask><mask><mask><mask><mask>now();Duration d1 = toDurationTo(now);Duration d2 = toDurationTo(now);"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Duration",
    "boolean": 1,
    "context": "public class jt4 { public static boolean isLonger(Period p1, Period p2) { Instant now = now();<mask><mask><mask><mask><mask><mask>.Duration d1 = toDurationTo(now);Duration d2 = toDurationTo(now);return isLongerThan(d2);"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Period.toDurationTo()",
    "boolean": 1,
    "context": "public class jt4 { public static boolean isLonger(Period p1, Period p2) { Instant now = now();Duration d1 = <mask><mask><mask><mask><mask><mask>toDurationTo(now);Duration d2 = toDurationTo(now);return isLongerThan(d2);"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Duration",
    "boolean": 1,
    "context": "public class jt4 { public static boolean isLonger(Period p1, Period p2) { Instant now = now();Duration d1 = toDurationTo(now);<mask><mask><mask><mask><mask><mask>.Duration d2 = toDurationTo(now);return isLongerThan(d2);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Period.toDurationTo()",
    "boolean": 1,
    "context": "public class jt4 { public static boolean isLonger(Period p1, Period p2) { Instant now = now();Duration d1 = toDurationTo(now);Duration d2 = <mask><mask><mask><mask><mask><mask>toDurationTo(now);return isLongerThan(d2);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.Duration.isLongerThan()",
    "boolean": 1,
    "context": "org.joda.time.Duration d1 = toDurationTo(now);Duration d2 = toDurationTo(now);return <mask><mask><mask><mask><mask><mask>isLongerThan(d2);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZoneId",
    "boolean": 1,
    "context": "public class jt5 { public static void h1() { <mask><mask><mask>.ZoneId z = of(String);ZonedDateTime start = of(2017, 1, 17, 14, 45, 0, 0, z);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZoneId.of()",
    "boolean": 1,
    "context": "public class jt5 { public static void h1() { ZoneId z = <mask><mask><mask>of(String);ZonedDateTime start = of(2017, 1, 17, 14, 45, 0, 0, z);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZonedDateTime",
    "boolean": 1,
    "context": "public class jt5 { public static void h1() { ZoneId z = of(String);<mask><mask><mask>.ZonedDateTime start = of(2017, 1, 17, 14, 45, 0, 0, z);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZonedDateTime.of()",
    "boolean": 1,
    "context": "public class jt5 { public static void h1() { ZoneId z = of(String);ZonedDateTime start = <mask><mask><mask>of(2017, 1, 17, 14, 45, 0, 0, z);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime",
    "boolean": 1,
    "context": "public class jt6 { public static void h1() { joda <mask><mask><mask><mask><mask><mask>.DateTime DateTimeFormatter format = joda DateTime forPattern(String);joda DateTime time = parseDateTime(String);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time.format.DateTimeTimeatter",
    "truth_type": "org.joda.time.format.DateTimeFormatter",
    "full_FQN": "org.joda.time.format.DateTimeFormatter.DateTimeFormatter",
    "boolean": 0,
    "context": "public class jt6 { public static void h1() { joda DateTime <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.DateTimeFormatter format = joda DateTime forPattern(String);joda DateTime time = parseDateTime(String);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time",
    "truth_type": "org.joda.time",
    "full_FQN": "org.joda.time.DateTime",
    "boolean": 1,
    "context": "public class jt6 { public static void h1() { joda DateTime DateTimeFormatter format = joda <mask><mask><mask><mask><mask><mask>.DateTime forPattern(String);joda DateTime time = parseDateTime(String);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time.format.DateTimeFormatter",
    "truth_type": "org.joda.time.format.DateTimeFormatter",
    "full_FQN": "org.joda.time.format.DateTimeFormatter.DateTimeFormat.forPattern()",
    "boolean": 1,
    "context": "public class jt6 { public static void h1() { joda DateTime DateTimeFormatter format = joda DateTime <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>forPattern(String);joda DateTime time = parseDateTime(String);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time.DateTime",
    "truth_type": "org.joda.time.DateTime",
    "full_FQN": "org.joda.time.DateTime.DateTime",
    "boolean": 1,
    "context": "public class jt6 { public static void h1() { joda DateTime DateTimeFormatter format = joda DateTime forPattern(String);joda <mask><mask><mask><mask><mask><mask><mask><mask><mask>.DateTime time = parseDateTime(String);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "org.joda.time.format",
    "truth_type": "org.joda.time.format",
    "full_FQN": "org.joda.time.format.DateTimeFormatter.parseDateTime()",
    "boolean": 1,
    "context": "public class jt6 { public static void h1() { joda DateTime DateTimeFormatter format = joda DateTime forPattern(String);joda DateTime time = <mask><mask><mask><mask><mask><mask><mask><mask>parseDateTime(String);} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Calendar",
    "boolean": 1,
    "context": "public class jt7 { public static void h1() { <mask><mask><mask>.Calendar calendar1 = getInstance();long milliseconds1 = getTimeInMillis();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Calendar.getInstance()",
    "boolean": 1,
    "context": "public class jt7 { public static void h1() { Calendar calendar1 = <mask><mask><mask>getInstance();long milliseconds1 = getTimeInMillis();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Calendar.getTimeInMillis()",
    "boolean": 1,
    "context": "public class jt7 { public static void h1() { Calendar calendar1 = getInstance();long milliseconds1 = <mask><mask><mask>getTimeInMillis();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.Calendar.getInstance()",
    "boolean": 1,
    "context": "public class jt8 { public static int getFirstDayOfWeek() { return ((<mask><mask><mask>getInstance().getFirstDayOfWeek() + 5) % 7) + 1;} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.LocalDate",
    "boolean": 1,
    "context": "public class jt9 { public static void h1() { <mask><mask><mask>.LocalDate today = now();ZonedDateTime zdt = atStartOfDay().atZone(systemDefault());OffsetDateTime odt = toOffsetDateTime();"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.LocalDate.now()",
    "boolean": 1,
    "context": "public class jt9 { public static void h1() { LocalDate today = <mask><mask><mask>now();ZonedDateTime zdt = atStartOfDay().atZone(systemDefault());OffsetDateTime odt = toOffsetDateTime();"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZonedDateTime",
    "boolean": 1,
    "context": "public class jt9 { public static void h1() { LocalDate today = now();<mask><mask><mask>.ZonedDateTime zdt = atStartOfDay().atZone(systemDefault());OffsetDateTime odt = toOffsetDateTime();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.LocalDate.atStartOfDay()",
    "boolean": 1,
    "context": "public class jt9 { public static void h1() { LocalDate today = now();ZonedDateTime zdt = <mask><mask><mask>atStartOfDay().atZone(systemDefault());OffsetDateTime odt = toOffsetDateTime();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZoneId.systemDefault()",
    "boolean": 1,
    "context": "public class jt9 { public static void h1() { LocalDate today = now();ZonedDateTime zdt = atStartOfDay().atZone(<mask><mask><mask>systemDefault());OffsetDateTime odt = toOffsetDateTime();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.OffsetDateTime",
    "boolean": 1,
    "context": "public class jt9 { public static void h1() { LocalDate today = now();ZonedDateTime zdt = atStartOfDay().atZone(systemDefault());<mask><mask><mask>.OffsetDateTime odt = toOffsetDateTime();} };"
  },
  {
    "lib_name": "joda_time",
    "pred_type": "java.time",
    "truth_type": "java.time",
    "full_FQN": "java.time.ZonedDateTime.toOffsetDateTime()",
    "boolean": 1,
    "context": "public class jt9 { public static void h1() { LocalDate today = now();ZonedDateTime zdt = atStartOfDay().atZone(systemDefault());OffsetDateTime odt = <mask><mask><mask>toOffsetDateTime();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.io.xml",
    "truth_type": "com.thoughtworks.xstream.io.xml",
    "full_FQN": "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder",
    "boolean": 1,
    "context": "public class xt1 { public static void h1() { <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XmlFriendlyNameCoder nameCoder = new XmlFriendlyNameCoder(String, String);XStream xmlStream = new XStream(new Dom4JDriver(nameCoder));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.io",
    "truth_type": "com.thoughtworks.xstream.io",
    "full_FQN": "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder()",
    "boolean": 1,
    "context": "public class xt1 { public static void h1() { XmlFriendlyNameCoder nameCoder = new <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>XmlFriendlyNameCoder(String, String);XStream xmlStream = new XStream(new Dom4JDriver(nameCoder));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream",
    "truth_type": "com.thoughtworks.xstream",
    "full_FQN": "com.thoughtworks.xstream.XStream",
    "boolean": 1,
    "context": "public class xt1 { public static void h1() { XmlFriendlyNameCoder nameCoder = new XmlFriendlyNameCoder(String, String);<mask><mask><mask><mask><mask><mask><mask><mask>.XStream xmlStream = new XStream(new Dom4JDriver(nameCoder));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks",
    "truth_type": "com.thoughtworks",
    "full_FQN": "com.thoughtworks.xstream.XStream()",
    "boolean": 1,
    "context": "public class xt1 { public static void h1() { XmlFriendlyNameCoder nameCoder = new XmlFriendlyNameCoder(String, String);XStream xmlStream = new <mask><mask><mask><mask><mask>XStream(new Dom4JDriver(nameCoder));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.io",
    "truth_type": "com.thoughtworks.xstream.io",
    "full_FQN": "com.thoughtworks.xstream.io.xml.Dom4JDriver()",
    "boolean": 1,
    "context": "public class xt1 { public static void h1() { XmlFriendlyNameCoder nameCoder = new XmlFriendlyNameCoder(String, String);XStream xmlStream = new XStream(new <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>Dom4JDriver(nameCoder));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream",
    "truth_type": "com.thoughtworks.xstream",
    "full_FQN": "com.thoughtworks.xstream.XStream",
    "boolean": 1,
    "context": "public class xt10 { public static void h1() { <mask><mask><mask><mask><mask><mask><mask><mask>.XStream stream = new XStream(new StaxDriver()); toXML(messages, out);StringWriter out = new StringWriter();"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks",
    "truth_type": "com.thoughtworks",
    "full_FQN": "com.thoughtworks.xstream.XStream()",
    "boolean": 1,
    "context": "public class xt10 { public static void h1() { XStream stream = new <mask><mask><mask><mask><mask>XStream(new StaxDriver()); toXML(messages, out);StringWriter out = new StringWriter();"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.io",
    "truth_type": "com.thoughtworks.xstream.io",
    "full_FQN": "com.thoughtworks.xstream.io.xml.StaxDriver()",
    "boolean": 1,
    "context": "public class xt10 { public static void h1() { XStream stream = new XStream(new <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>StaxDriver()); toXML(messages, out);StringWriter out = new StringWriter();"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream",
    "truth_type": "com.thoughtworks.xstream",
    "full_FQN": "com.thoughtworks.xstream.XStream.toXML()",
    "boolean": 1,
    "context": "public class xt10 { public static void h1() { XStream stream = new XStream(new StaxDriver()); <mask><mask><mask><mask><mask><mask><mask><mask>toXML(messages, out);StringWriter out = new StringWriter();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.io.xml.X..ConUtTest",
    "truth_type": "com.sun.org.apache.xml.internal.serializer.utils.Utils",
    "full_FQN": "com.sun.org.apache.xml.internal.serializer.utils.Utils.messages",
    "boolean": 0,
    "context": "public class xt10 { public static void h1() { XStream stream = new XStream(new StaxDriver()); toXML(<mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.messages, out);StringWriter out = new StringWriter();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.StringWriter",
    "boolean": 1,
    "context": "public class xt10 { public static void h1() { XStream stream = new XStream(new StaxDriver()); toXML(messages, out);<mask><mask><mask>.StringWriter out = new StringWriter();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.StringWriter()",
    "boolean": 1,
    "context": "public class xt10 { public static void h1() { XStream stream = new XStream(new StaxDriver()); toXML(messages, out);StringWriter out = new <mask><mask><mask>.StringWriter();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.ByteArrayOutputStream",
    "boolean": 1,
    "context": "public class xt11 { public static void h1() { <mask><mask><mask>.ByteArrayOutputStream outputStream = new ByteArrayOutputStream();Node doc = null;Source xmlSource = new DOMSource(doc);"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.ByteArrayOutputStream()",
    "boolean": 1,
    "context": "public class xt11 { public static void h1() { ByteArrayOutputStream outputStream = new <mask><mask><mask>.ByteArrayOutputStream();Node doc = null;Source xmlSource = new DOMSource(doc);"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.transform",
    "truth_type": "org.w3c.dom",
    "full_FQN": "org.w3c.dom.Node",
    "boolean": 0,
    "context": "public class xt11 { public static void h1() { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();<mask><mask><mask><mask><mask><mask><mask>.Node doc = null;Source xmlSource = new DOMSource(doc);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.transform",
    "truth_type": "javax.xml.transform",
    "full_FQN": "javax.xml.transform.Source",
    "boolean": 1,
    "context": "public class xt11 { public static void h1() { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();Node doc = null;<mask><mask><mask><mask><mask><mask><mask>.Source xmlSource = new DOMSource(doc);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.transform",
    "truth_type": "javax.xml.transform",
    "full_FQN": "javax.xml.transform.dom.DOMSource()",
    "boolean": 1,
    "context": "public class xt11 { public static void h1() { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();Node doc = null;Source xmlSource = new <mask><mask><mask><mask><mask><mask><mask>DOMSource(doc);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.ByteArrayOutputStream",
    "boolean": 1,
    "context": "public class xt12 { public static void h1() { <mask><mask><mask>.ByteArrayOutputStream outputStream = new ByteArrayOutputStream();try { Transformer t = newInstance().newTransformer();} catch (TransformerConfigurationException e) { printStackTrace();"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.ByteArrayOutputStream()",
    "boolean": 1,
    "context": "public class xt12 { public static void h1() { ByteArrayOutputStream outputStream = new <mask><mask><mask>.ByteArrayOutputStream();try { Transformer t = newInstance().newTransformer();} catch (TransformerConfigurationException e) { printStackTrace();"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.transform",
    "truth_type": "javax.xml.transform",
    "full_FQN": "javax.xml.transform.Transformer",
    "boolean": 1,
    "context": "public class xt12 { public static void h1() { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();try { <mask><mask><mask><mask><mask><mask><mask>.Transformer t = newInstance().newTransformer();} catch (TransformerConfigurationException e) { printStackTrace();} } };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.transform",
    "truth_type": "javax.xml.transform",
    "full_FQN": "javax.xml.transform.TransformerFactory.newInstance()",
    "boolean": 1,
    "context": "public class xt12 { public static void h1() { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();try { Transformer t = <mask><mask><mask><mask><mask><mask><mask>newInstance().newTransformer();} catch (TransformerConfigurationException e) { printStackTrace();} } };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.transform",
    "truth_type": "javax.xml.transform",
    "full_FQN": "javax.xml.transform.TransformerConfigurationException",
    "boolean": 1,
    "context": "public class xt12 { public static void h1() { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();try { Transformer t = newInstance().newTransformer();} catch (<mask><mask><mask><mask><mask><mask><mask>.TransformerConfigurationException e) { printStackTrace();} } };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.transform",
    "truth_type": "javax.xml.transform",
    "full_FQN": "javax.xml.transform.TransformerConfigurationException.printStackTrace()",
    "boolean": 1,
    "context": "public class xt12 { public static void h1() { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();try { Transformer t = newInstance().newTransformer();} catch (TransformerConfigurationException e) { <mask><mask><mask><mask><mask><mask><mask>printStackTrace();} } };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.IOException",
    "boolean": 1,
    "context": "public class xt13 { public static void h1() throws <mask><mask><mask>.IOException { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();XMLWriter xmlWriter = new XMLWriter(outputStream, createPrettyPrint());Object doc = null;"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.ByteArrayOutputStream",
    "boolean": 1,
    "context": "public class xt13 { public static void h1() throws IOException { <mask><mask><mask>.ByteArrayOutputStream outputStream = new ByteArrayOutputStream();XMLWriter xmlWriter = new XMLWriter(outputStream, createPrettyPrint());Object doc = null;"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.ByteArrayOutputStream()",
    "boolean": 1,
    "context": "public class xt13 { public static void h1() throws IOException { ByteArrayOutputStream outputStream = new <mask><mask><mask>.ByteArrayOutputStream();XMLWriter xmlWriter = new XMLWriter(outputStream, createPrettyPrint());Object doc = null;"
  },
  {
    "lib_name": "xstream",
    "pred_type": "orgavax.xml.io",
    "truth_type": "org.dom4j.io",
    "full_FQN": "org.dom4j.io.XMLWriter",
    "boolean": 0,
    "context": "public class xt13 { public static void h1() throws IOException { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();<mask><mask><mask><mask><mask><mask><mask>.XMLWriter xmlWriter = new XMLWriter(outputStream, createPrettyPrint());Object doc = null;} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "j.ax.xml",
    "truth_type": "org.dom4j",
    "full_FQN": "org.dom4j.io.XMLWriter()",
    "boolean": 0,
    "context": "public class xt13 { public static void h1() throws IOException { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();XMLWriter xmlWriter = new <mask><mask><mask><mask><mask>XMLWriter(outputStream, createPrettyPrint());Object doc = null;} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.security.xml.transform",
    "truth_type": "org.dom4j.io",
    "full_FQN": "org.dom4j.io.OutputFormat.createPrettyPrint()",
    "boolean": 0,
    "context": "public class xt13 { public static void h1() throws IOException { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();XMLWriter xmlWriter = new XMLWriter(outputStream, <mask><mask><mask><mask><mask><mask><mask>createPrettyPrint());Object doc = null;} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream",
    "truth_type": "com.thoughtworks.xstream",
    "full_FQN": "com.thoughtworks.xstream.XStream",
    "boolean": 1,
    "context": "public abstract class xt14 { public static void h1() { final <mask><mask><mask><mask><mask><mask><mask><mask>.XStream stream = new XStream(new DomDriver());} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks",
    "truth_type": "com.thoughtworks",
    "full_FQN": "com.thoughtworks.xstream.XStream()",
    "boolean": 1,
    "context": "public abstract class xt14 { public static void h1() { final XStream stream = new <mask><mask><mask><mask><mask>XStream(new DomDriver());} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.io",
    "truth_type": "com.thoughtworks.xstream.io",
    "full_FQN": "com.thoughtworks.xstream.io.xml.DomDriver()",
    "boolean": 1,
    "context": "public abstract class xt14 { public static void h1() { final XStream stream = new XStream(new <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>DomDriver());} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream",
    "truth_type": "com.thoughtworks.xstream.XStream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream",
    "boolean": 1,
    "context": "public class xt15 { private void generateResponse(final thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xStream) { thoughtworks XStream xstream = new thoughtworks XStream(new thoughtworks DomDriver());StringBuffer contents = new StringBuffer();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream",
    "truth_type": "com.thoughtworks.xstream.XStream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream",
    "boolean": 1,
    "context": "public class xt15 { private void generateResponse(final thoughtworks XStream xStream) { thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xstream = new thoughtworks XStream(new thoughtworks DomDriver());StringBuffer contents = new StringBuffer();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream",
    "truth_type": "com.thoughtworks.xstream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream()",
    "boolean": 1,
    "context": "public class xt15 { private void generateResponse(final thoughtworks XStream xStream) { thoughtworks XStream xstream = new thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask>XStream(new thoughtworks DomDriver());StringBuffer contents = new StringBuffer();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream.io",
    "truth_type": "com.thoughtworks.xstream.XStream.io",
    "full_FQN": "com.thoughtworks.xstream.XStream.io.xml.DomDriver()",
    "boolean": 1,
    "context": "public class xt15 { private void generateResponse(final thoughtworks XStream xStream) { thoughtworks XStream xstream = new thoughtworks XStream(new thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>DomDriver());StringBuffer contents = new StringBuffer();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.File",
    "boolean": 1,
    "context": "public class xt16 { public static Object Load(String xmlPath) { <mask><mask><mask>.File FileIn = new File(xmlPath);if  exists()) { DocumentBuilderFactory factory = newInstance();return null;"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.File()",
    "boolean": 1,
    "context": "public class xt16 { public static Object Load(String xmlPath) { File FileIn = new <mask><mask><mask>.File(xmlPath);if  exists()) { DocumentBuilderFactory factory = newInstance();return null;"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.File.exists()",
    "boolean": 1,
    "context": "public class xt16 { public static Object Load(String xmlPath) { File FileIn = new File(xmlPath);if  <mask><mask><mask>exists()) { DocumentBuilderFactory factory = newInstance();return null;} return null;"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.parsers",
    "truth_type": "javax.xml.parsers",
    "full_FQN": "javax.xml.parsers.DocumentBuilderFactory",
    "boolean": 1,
    "context": "public class xt16 { public static Object Load(String xmlPath) { File FileIn = new File(xmlPath);if  exists()) { <mask><mask><mask><mask><mask><mask><mask><mask><mask>.DocumentBuilderFactory factory = newInstance();return null;} return null;"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.parsers",
    "truth_type": "javax.xml.parsers",
    "full_FQN": "javax.xml.parsers.DocumentBuilderFactory.newInstance()",
    "boolean": 1,
    "context": "public class xt16 { public static Object Load(String xmlPath) { File FileIn = new File(xmlPath);if  exists()) { DocumentBuilderFactory factory = <mask><mask><mask><mask><mask><mask><mask><mask><mask>newInstance();return null;} return null;"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.parsers",
    "truth_type": "javax.xml.parsers",
    "full_FQN": "javax.xml.parsers.ParserConfigurationException",
    "boolean": 1,
    "context": "public class xt17 { public static void h1(String xmlPath) throws <mask><mask><mask><mask><mask><mask><mask><mask><mask>.ParserConfigurationException, IOException, SAXException { File FileIn = new File(xmlPath);DocumentBuilderFactory factory = newInstance();DocumentBuilder builder = newDocumentBuilder();"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.IOException",
    "boolean": 1,
    "context": "public class xt17 { public static void h1(String xmlPath) throws ParserConfigurationException, <mask><mask><mask>.IOException, SAXException { File FileIn = new File(xmlPath);DocumentBuilderFactory factory = newInstance();DocumentBuilder builder = newDocumentBuilder();"
  },
  {
    "lib_name": "xstream",
    "pred_type": "org.xml.sax",
    "truth_type": "org.xml.sax",
    "full_FQN": "org.xml.sax.SAXException",
    "boolean": 1,
    "context": "public class xt17 { public static void h1(String xmlPath) throws ParserConfigurationException, IOException, <mask><mask><mask><mask><mask><mask>.SAXException { File FileIn = new File(xmlPath);DocumentBuilderFactory factory = newInstance();DocumentBuilder builder = newDocumentBuilder();"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.File",
    "boolean": 1,
    "context": "public class xt17 { public static void h1(String xmlPath) throws ParserConfigurationException, IOException, SAXException { <mask><mask><mask>.File FileIn = new File(xmlPath);DocumentBuilderFactory factory = newInstance();DocumentBuilder builder = newDocumentBuilder();"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.File()",
    "boolean": 1,
    "context": "public class xt17 { public static void h1(String xmlPath) throws ParserConfigurationException, IOException, SAXException { File FileIn = new <mask><mask><mask>.File(xmlPath);DocumentBuilderFactory factory = newInstance();DocumentBuilder builder = newDocumentBuilder();"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.parsers",
    "truth_type": "javax.xml.parsers",
    "full_FQN": "javax.xml.parsers.DocumentBuilderFactory",
    "boolean": 1,
    "context": "public class xt17 { public static void h1(String xmlPath) throws ParserConfigurationException, IOException, SAXException { File FileIn = new File(xmlPath);<mask><mask><mask><mask><mask><mask><mask><mask><mask>.DocumentBuilderFactory factory = newInstance();DocumentBuilder builder = newDocumentBuilder();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.parsers",
    "truth_type": "javax.xml.parsers",
    "full_FQN": "javax.xml.parsers.DocumentBuilderFactory.newInstance()",
    "boolean": 1,
    "context": "public class xt17 { public static void h1(String xmlPath) throws ParserConfigurationException, IOException, SAXException { File FileIn = new File(xmlPath);DocumentBuilderFactory factory = <mask><mask><mask><mask><mask><mask><mask><mask><mask>newInstance();DocumentBuilder builder = newDocumentBuilder();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.parsers",
    "truth_type": "javax.xml.parsers",
    "full_FQN": "javax.xml.parsers.DocumentBuilder",
    "boolean": 1,
    "context": "public class xt17 { public static void h1(String xmlPath) throws ParserConfigurationException, IOException, SAXException { File FileIn = new File(xmlPath);DocumentBuilderFactory factory = newInstance();<mask><mask><mask><mask><mask><mask><mask><mask><mask>.DocumentBuilder builder = newDocumentBuilder();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.parsers",
    "truth_type": "javax.xml.parsers",
    "full_FQN": "javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()",
    "boolean": 1,
    "context": "public class xt17 { public static void h1(String xmlPath) throws ParserConfigurationException, IOException, SAXException { File FileIn = new File(xmlPath);DocumentBuilderFactory factory = newInstance();DocumentBuilder builder = <mask><mask><mask><mask><mask><mask><mask><mask><mask>newDocumentBuilder();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.xpath.XPath",
    "truth_type": "javax.xml.xpath.XPath",
    "full_FQN": "javax.xml.xpath.XPath.XPathFactory",
    "boolean": 1,
    "context": "public class xt18 { public static void h1() { } xml <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XPathFactory xPathFactory = xml newInstance();xml XPath xpath = newXPath();};"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.xpath.XPath",
    "truth_type": "javax.xml.xpath.XPath",
    "full_FQN": "javax.xml.xpath.XPath.XPathFactory.newInstance()",
    "boolean": 1,
    "context": "public class xt18 { public static void h1() { } xml XPathFactory xPathFactory = xml <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>newInstance();xml XPath xpath = newXPath();};"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.xpath.XPath",
    "truth_type": "javax.xml.xpath.XPath",
    "full_FQN": "javax.xml.xpath.XPath.XPath",
    "boolean": 1,
    "context": "public class xt18 { public static void h1() { } xml XPathFactory xPathFactory = xml newInstance();xml <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XPath xpath = newXPath();};"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.xpath",
    "truth_type": "javax.xml.xpath",
    "full_FQN": "javax.xml.xpath.XPathFactory.newXPath()",
    "boolean": 1,
    "context": "public class xt18 { public static void h1() { } xml XPathFactory xPathFactory = xml newInstance();xml XPath xpath = <mask><mask><mask><mask><mask><mask><mask><mask>newXPath();};"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.List",
    "boolean": 1,
    "context": "public class xt19 { public <mask><mask><mask>.List<String> tags = new ArrayList<String>();public List<String> notags = new ArrayList<String>();};"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.ArrayList",
    "boolean": 1,
    "context": "public class xt19 { public List<String> tags = new <mask><mask><mask>.ArrayList<String>();public List<String> notags = new ArrayList<String>();};"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.List",
    "boolean": 1,
    "context": "public class xt19 { public List<String> tags = new ArrayList<String>();public <mask><mask><mask>.List<String> notags = new ArrayList<String>();};"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.ArrayList",
    "boolean": 1,
    "context": "public class xt19 { public List<String> tags = new ArrayList<String>();public List<String> notags = new <mask><mask><mask>.ArrayList<String>();};"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream",
    "truth_type": "com.thoughtworks.xstream.XStream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream",
    "boolean": 1,
    "context": "public class xt2 { public static void h1() { thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xstream = new thoughtworks XStream(new thoughtworks DomDriver(String, new thoughtworks NoNameCoder()));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream",
    "truth_type": "com.thoughtworks.xstream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream()",
    "boolean": 1,
    "context": "public class xt2 { public static void h1() { thoughtworks XStream xstream = new thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask>XStream(new thoughtworks DomDriver(String, new thoughtworks NoNameCoder()));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream.io",
    "truth_type": "com.thoughtworks.xstream.XStream.io",
    "full_FQN": "com.thoughtworks.xstream.XStream.io.xml.DomDriver()",
    "boolean": 1,
    "context": "public class xt2 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream(new thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>DomDriver(String, new thoughtworks NoNameCoder()));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream.io",
    "truth_type": "com.thoughtworks.xstream.XStream.io",
    "full_FQN": "com.thoughtworks.xstream.XStream.io.naming.NoNameCoder()",
    "boolean": 1,
    "context": "public class xt2 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream(new thoughtworks DomDriver(String, new thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>NoNameCoder()));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream",
    "truth_type": "com.thoughtworks.xstream.XStream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream",
    "boolean": 1,
    "context": "public class xt20 { public static void h1() { thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xstream = new thoughtworks XStream();xstream thoughtworks ClassAliasingMapper mapper = new xstream thoughtworks ClassAliasingMapper getMapper()); thoughtworks registerLocalConverter(class, String, new thoughtworks CollectionConverter(mapper));"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream",
    "truth_type": "com.thoughtworks.xstream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream()",
    "boolean": 1,
    "context": "public class xt20 { public static void h1() { thoughtworks XStream xstream = new thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask>XStream();xstream thoughtworks ClassAliasingMapper mapper = new xstream thoughtworks ClassAliasingMapper getMapper()); thoughtworks registerLocalConverter(class, String, new thoughtworks CollectionConverter(mapper));"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks",
    "truth_type": "com.thoughtworks",
    "full_FQN": "com.thoughtworks.xstream",
    "boolean": 1,
    "context": "public class xt20 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream();<mask><mask><mask><mask><mask>.xstream thoughtworks ClassAliasingMapper mapper = new xstream thoughtworks ClassAliasingMapper getMapper()); thoughtworks registerLocalConverter(class, String, new thoughtworks CollectionConverter(mapper));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream.mapper.ClassAliasingMapper",
    "truth_type": "com.thoughtworks.xstream.XStream.mapper.ClassAliasingMapper",
    "full_FQN": "com.thoughtworks.xstream.XStream.mapper.ClassAliasingMapper.ClassAliasingMapper",
    "boolean": 1,
    "context": "public class xt20 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream();xstream thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ClassAliasingMapper mapper = new xstream thoughtworks ClassAliasingMapper getMapper()); thoughtworks registerLocalConverter(class, String, new thoughtworks CollectionConverter(mapper));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks",
    "truth_type": "com.thoughtworks",
    "full_FQN": "com.thoughtworks.xstream",
    "boolean": 1,
    "context": "public class xt20 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream();xstream thoughtworks ClassAliasingMapper mapper = new <mask><mask><mask><mask><mask>.xstream thoughtworks ClassAliasingMapper getMapper()); thoughtworks registerLocalConverter(class, String, new thoughtworks CollectionConverter(mapper));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream.mapper.ClassAliasingMapper",
    "truth_type": "com.thoughtworks.xstream.XStream.mapper.ClassAliasingMapper",
    "full_FQN": "com.thoughtworks.xstream.XStream.mapper.ClassAliasingMapper.ClassAliasingMapper",
    "boolean": 1,
    "context": "public class xt20 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream();xstream thoughtworks ClassAliasingMapper mapper = new xstream thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.ClassAliasingMapper getMapper()); thoughtworks registerLocalConverter(class, String, new thoughtworks CollectionConverter(mapper));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream",
    "truth_type": "com.thoughtworks.xstream",
    "full_FQN": "com.thoughtworks.xstream.XStream.getMapper()",
    "boolean": 1,
    "context": "public class xt20 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream();xstream thoughtworks ClassAliasingMapper mapper = new xstream thoughtworks ClassAliasingMapper <mask><mask><mask><mask><mask><mask><mask><mask>getMapper()); thoughtworks registerLocalConverter(class, String, new thoughtworks CollectionConverter(mapper));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream",
    "truth_type": "com.thoughtworks.xstream.XStream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream.registerLocalConverter()",
    "boolean": 1,
    "context": "public class xt20 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream();xstream thoughtworks ClassAliasingMapper mapper = new xstream thoughtworks ClassAliasingMapper getMapper()); thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>registerLocalConverter(class, String, new thoughtworks CollectionConverter(mapper));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.util.ArrayMap",
    "truth_type": "junit.framework.Test",
    "full_FQN": "junit.framework.Test.class",
    "boolean": 0,
    "context": "public class xt20 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream();xstream thoughtworks ClassAliasingMapper mapper = new xstream thoughtworks ClassAliasingMapper getMapper()); thoughtworks registerLocalConverter(<mask><mask><mask><mask><mask><mask>.class, String, new thoughtworks CollectionConverter(mapper));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream.converters",
    "truth_type": "com.thoughtworks.xstream.XStream.converters",
    "full_FQN": "com.thoughtworks.xstream.XStream.converters.collections.CollectionConverter()",
    "boolean": 1,
    "context": "public class xt20 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream();xstream thoughtworks ClassAliasingMapper mapper = new xstream thoughtworks ClassAliasingMapper getMapper()); thoughtworks registerLocalConverter(class, String, new thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>CollectionConverter(mapper));} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream",
    "truth_type": "com.thoughtworks.xstream",
    "full_FQN": "com.thoughtworks.xstream.XStream",
    "boolean": 1,
    "context": "public class xt3 { public static void h1() { String strXML = String;<mask><mask><mask><mask><mask><mask><mask><mask>.XStream xs = new XStream();StringWriter sw = new StringWriter();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks",
    "truth_type": "com.thoughtworks",
    "full_FQN": "com.thoughtworks.xstream.XStream()",
    "boolean": 1,
    "context": "public class xt3 { public static void h1() { String strXML = String;XStream xs = new <mask><mask><mask><mask><mask>XStream();StringWriter sw = new StringWriter();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.StringWriter",
    "boolean": 1,
    "context": "public class xt3 { public static void h1() { String strXML = String;XStream xs = new XStream();<mask><mask><mask>.StringWriter sw = new StringWriter();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.StringWriter()",
    "boolean": 1,
    "context": "public class xt3 { public static void h1() { String strXML = String;XStream xs = new XStream();StringWriter sw = new <mask><mask><mask>.StringWriter();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream",
    "truth_type": "com.thoughtworks.xstream.XStream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream",
    "boolean": 1,
    "context": "public class xt4 { public static void h1() { thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xstream = new thoughtworks XStream(new thoughtworks JettisonMappedXmlDriver()); thoughtworks alias(String, Entity[].class);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream",
    "truth_type": "com.thoughtworks.xstream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream()",
    "boolean": 1,
    "context": "public class xt4 { public static void h1() { thoughtworks XStream xstream = new thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask>XStream(new thoughtworks JettisonMappedXmlDriver()); thoughtworks alias(String, Entity[].class);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream.core",
    "truth_type": "com.thoughtworks.xstream.XStream.io",
    "full_FQN": "com.thoughtworks.xstream.XStream.io.json.JettisonMappedXmlDriver()",
    "boolean": 0,
    "context": "public class xt4 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream(new thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>JettisonMappedXmlDriver()); thoughtworks alias(String, Entity[].class);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream",
    "truth_type": "com.thoughtworks.xstream.XStream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream.alias()",
    "boolean": 1,
    "context": "public class xt4 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream(new thoughtworks JettisonMappedXmlDriver()); thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>alias(String, Entity[].class);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.acceptance.someobjects",
    "truth_type": "javax.swing.text.html.parser",
    "full_FQN": "javax.swing.text.html.parser.Entity",
    "boolean": 0,
    "context": "public class xt4 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream(new thoughtworks JettisonMappedXmlDriver()); thoughtworks alias(String, <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.Entity[].class);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream",
    "truth_type": "com.thoughtworks.xstream.XStream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream",
    "boolean": 1,
    "context": "public class xt5 { public static void h1() { thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xstream = new thoughtworks XStream(); thoughtworks processAnnotations(class);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream",
    "truth_type": "com.thoughtworks.xstream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream()",
    "boolean": 1,
    "context": "public class xt5 { public static void h1() { thoughtworks XStream xstream = new thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask>XStream(); thoughtworks processAnnotations(class);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream",
    "truth_type": "com.thoughtworks.xstream.XStream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream.processAnnotations()",
    "boolean": 1,
    "context": "public class xt5 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream(); thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>processAnnotations(class);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.util.ArrayList",
    "truth_type": "java.util.Properties",
    "full_FQN": "java.util.Properties.class",
    "boolean": 0,
    "context": "public class xt5 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream(); thoughtworks processAnnotations(<mask><mask><mask><mask><mask><mask>.class);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream.io.json",
    "truth_type": "com.thoughtworks.xstream.XStream.io.json",
    "full_FQN": "com.thoughtworks.xstream.XStream.io.json.JettisonMappedXmlDriver",
    "boolean": 1,
    "context": "public class xt6 { public static void h1() { thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.JettisonMappedXmlDriver xmlDriver = new thoughtworks JettisonMappedXmlDriver();thoughtworks XStream xstream = new thoughtworks XStream(xmlDriver);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream.io",
    "truth_type": "com.thoughtworks.xstream.XStream.io",
    "full_FQN": "com.thoughtworks.xstream.XStream.io.json.JettisonMappedXmlDriver()",
    "boolean": 1,
    "context": "public class xt6 { public static void h1() { thoughtworks JettisonMappedXmlDriver xmlDriver = new thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>JettisonMappedXmlDriver();thoughtworks XStream xstream = new thoughtworks XStream(xmlDriver);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream",
    "truth_type": "com.thoughtworks.xstream.XStream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream",
    "boolean": 1,
    "context": "public class xt6 { public static void h1() { thoughtworks JettisonMappedXmlDriver xmlDriver = new thoughtworks JettisonMappedXmlDriver();thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xstream = new thoughtworks XStream(xmlDriver);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream",
    "truth_type": "com.thoughtworks.xstream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream()",
    "boolean": 1,
    "context": "public class xt6 { public static void h1() { thoughtworks JettisonMappedXmlDriver xmlDriver = new thoughtworks JettisonMappedXmlDriver();thoughtworks XStream xstream = new thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask>XStream(xmlDriver);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream",
    "truth_type": "com.thoughtworks.xstream.XStream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream",
    "boolean": 1,
    "context": "public class xt7 { public static void h1() { thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>.XStream xstream = new thoughtworks XStream(); thoughtworks autodetectAnnotations(true);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream",
    "truth_type": "com.thoughtworks.xstream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream()",
    "boolean": 1,
    "context": "public class xt7 { public static void h1() { thoughtworks XStream xstream = new thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask>XStream(); thoughtworks autodetectAnnotations(true);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "com.thoughtworks.xstream.XStream",
    "truth_type": "com.thoughtworks.xstream.XStream",
    "full_FQN": "com.thoughtworks.xstream.XStream.XStream.autodetectAnnotations()",
    "boolean": 1,
    "context": "public class xt7 { public static void h1() { thoughtworks XStream xstream = new thoughtworks XStream(); thoughtworks <mask><mask><mask><mask><mask><mask><mask><mask><mask><mask><mask>autodetectAnnotations(true);} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.List",
    "boolean": 1,
    "context": "public class xt8 { public void h1() { <mask><mask><mask>.List<Comment> comments = new ArrayList<Comment>();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.stream.events",
    "truth_type": "javax.xml.stream.events",
    "full_FQN": "javax.xml.stream.events.Comment",
    "boolean": 1,
    "context": "public class xt8 { public void h1() { List<<mask><mask><mask><mask><mask><mask><mask><mask><mask>.Comment> comments = new ArrayList<Comment>();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.util",
    "truth_type": "java.util",
    "full_FQN": "java.util.ArrayList",
    "boolean": 1,
    "context": "public class xt8 { public void h1() { List<Comment> comments = new <mask><mask><mask>.ArrayList<Comment>();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.stream.events",
    "truth_type": "javax.xml.stream.events",
    "full_FQN": "javax.xml.stream.events.Comment",
    "boolean": 1,
    "context": "public class xt8 { public void h1() { List<Comment> comments = new ArrayList<<mask><mask><mask><mask><mask><mask><mask><mask><mask>.Comment>();} };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.ByteArrayOutputStream",
    "boolean": 1,
    "context": "public class xt9 { <mask><mask><mask>.ByteArrayOutputStream outputStream = new ByteArrayOutputStream();Result outputTarget = new StreamResult(outputStream);Transformer t = newInstance().newTransformer();"
  },
  {
    "lib_name": "xstream",
    "pred_type": "java.io",
    "truth_type": "java.io",
    "full_FQN": "java.io.ByteArrayOutputStream()",
    "boolean": 1,
    "context": "public class xt9 { ByteArrayOutputStream outputStream = new <mask><mask><mask>.ByteArrayOutputStream();Result outputTarget = new StreamResult(outputStream);Transformer t = newInstance().newTransformer();"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.transform",
    "truth_type": "javax.xml.transform",
    "full_FQN": "javax.xml.transform.Result",
    "boolean": 1,
    "context": "public class xt9 { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();<mask><mask><mask><mask><mask><mask><mask>.Result outputTarget = new StreamResult(outputStream);Transformer t = newInstance().newTransformer();public xt9() throws TransformerConfigurationException { } };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.transform",
    "truth_type": "javax.xml.transform",
    "full_FQN": "javax.xml.transform.stream.StreamResult()",
    "boolean": 1,
    "context": "public class xt9 { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();Result outputTarget = new <mask><mask><mask><mask><mask><mask><mask>StreamResult(outputStream);Transformer t = newInstance().newTransformer();public xt9() throws TransformerConfigurationException { } };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.transform",
    "truth_type": "javax.xml.transform",
    "full_FQN": "javax.xml.transform.Transformer",
    "boolean": 1,
    "context": "public class xt9 { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();Result outputTarget = new StreamResult(outputStream);<mask><mask><mask><mask><mask><mask><mask>.Transformer t = newInstance().newTransformer();public xt9() throws TransformerConfigurationException { } };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.transform",
    "truth_type": "javax.xml.transform",
    "full_FQN": "javax.xml.transform.TransformerFactory.newInstance()",
    "boolean": 1,
    "context": "public class xt9 { ByteArrayOutputStream outputStream = new ByteArrayOutputStream();Result outputTarget = new StreamResult(outputStream);Transformer t = <mask><mask><mask><mask><mask><mask><mask>newInstance().newTransformer();public xt9() throws TransformerConfigurationException { } };"
  },
  {
    "lib_name": "xstream",
    "pred_type": "javax.xml.transform",
    "truth_type": "javax.xml.transform",
    "full_FQN": "javax.xml.transform.TransformerConfigurationException",
    "boolean": 1,
    "context": "javax.xml.transform.Result outputTarget = new StreamResult(outputStream);Transformer t = newInstance().newTransformer();public xt9() throws <mask><mask><mask><mask><mask><mask><mask>.TransformerConfigurationException { } };"
  }
]